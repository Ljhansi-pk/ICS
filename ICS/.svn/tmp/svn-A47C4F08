'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("EmarkPassengerWithTR"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class EmarkPassengerWithTR
    Inherits Global.System.Data.DataSet
    
    Private tableCERTIFICATE_VIEW As CERTIFICATE_VIEWDataTable
    
    Private tablePRODUCTDATA_REPORT_VIEW As PRODUCTDATA_REPORT_VIEWDataTable
    
    Private tableBEADUNSEATHDR As BEADUNSEATHDRDataTable
    
    Private tableBEADUNSEATDTL As BEADUNSEATDTLDataTable
    
    Private tableENDURANCEDTL As ENDURANCEDTLDataTable
    
    Private tableENDURANCEHDR As ENDURANCEHDRDataTable
    
    Private tableHIGHSPEEDDTL As HIGHSPEEDDTLDataTable
    
    Private tableHIGHSPEEDHDR As HIGHSPEEDHDRDataTable
    
    Private tableMEASUREDTL As MEASUREDTLDataTable
    
    Private tableMEASUREHDR As MEASUREHDRDataTable
    
    Private tablePLUNGERDTL As PLUNGERDTLDataTable
    
    Private tablePLUNGERHDR As PLUNGERHDRDataTable
    
    Private tableTREADWEARHDR As TREADWEARHDRDataTable
    
    Private tableTREADWEARDTL As TREADWEARDTLDataTable
    
    Private tableSPEEDTESTDETAIL As SPEEDTESTDETAILDataTable
    
    Private tableBRAND_VIEW As BRAND_VIEWDataTable
    
    Private tableDEFAULTVALUES_VIEW As DEFAULTVALUES_VIEWDataTable
    
    Private relationCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW As Global.System.Data.DataRelation
    
    Private relationPLUNGERDTL_PLUNGERHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_PLUNGERHDR As Global.System.Data.DataRelation
    
    Private relationMEASUREHDR_MEASUREDTL As Global.System.Data.DataRelation
    
    Private relationBEADUNSEATHDR_BEADUNSEATDTL As Global.System.Data.DataRelation
    
    Private relationHIGHSPEEDHDR_HIGHSPEEDDTL As Global.System.Data.DataRelation
    
    Private relationENDURANCEHDR_ENDURANCEDTL As Global.System.Data.DataRelation
    
    Private relationHIGHSPEEDHDR_SPEEDTESTDETAIL As Global.System.Data.DataRelation
    
    Private relationTREADWEARHDR_TREADWEARDTL As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_ENDURANCEHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_TREADWEARHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_MEASUREHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_HIGHSPEEDHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_BEADUNSEATHDR As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_BRAND_VIEW As Global.System.Data.DataRelation
    
    Private relationCERTIFICATE_VIEW_DEFAULTVALUES_VIEW As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CERTIFICATE_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New CERTIFICATE_VIEWDataTable(ds.Tables("CERTIFICATE_VIEW")))
            End If
            If (Not (ds.Tables("PRODUCTDATA_REPORT_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTDATA_REPORT_VIEWDataTable(ds.Tables("PRODUCTDATA_REPORT_VIEW")))
            End If
            If (Not (ds.Tables("BEADUNSEATHDR")) Is Nothing) Then
                MyBase.Tables.Add(New BEADUNSEATHDRDataTable(ds.Tables("BEADUNSEATHDR")))
            End If
            If (Not (ds.Tables("BEADUNSEATDTL")) Is Nothing) Then
                MyBase.Tables.Add(New BEADUNSEATDTLDataTable(ds.Tables("BEADUNSEATDTL")))
            End If
            If (Not (ds.Tables("ENDURANCEDTL")) Is Nothing) Then
                MyBase.Tables.Add(New ENDURANCEDTLDataTable(ds.Tables("ENDURANCEDTL")))
            End If
            If (Not (ds.Tables("ENDURANCEHDR")) Is Nothing) Then
                MyBase.Tables.Add(New ENDURANCEHDRDataTable(ds.Tables("ENDURANCEHDR")))
            End If
            If (Not (ds.Tables("HIGHSPEEDDTL")) Is Nothing) Then
                MyBase.Tables.Add(New HIGHSPEEDDTLDataTable(ds.Tables("HIGHSPEEDDTL")))
            End If
            If (Not (ds.Tables("HIGHSPEEDHDR")) Is Nothing) Then
                MyBase.Tables.Add(New HIGHSPEEDHDRDataTable(ds.Tables("HIGHSPEEDHDR")))
            End If
            If (Not (ds.Tables("MEASUREDTL")) Is Nothing) Then
                MyBase.Tables.Add(New MEASUREDTLDataTable(ds.Tables("MEASUREDTL")))
            End If
            If (Not (ds.Tables("MEASUREHDR")) Is Nothing) Then
                MyBase.Tables.Add(New MEASUREHDRDataTable(ds.Tables("MEASUREHDR")))
            End If
            If (Not (ds.Tables("PLUNGERDTL")) Is Nothing) Then
                MyBase.Tables.Add(New PLUNGERDTLDataTable(ds.Tables("PLUNGERDTL")))
            End If
            If (Not (ds.Tables("PLUNGERHDR")) Is Nothing) Then
                MyBase.Tables.Add(New PLUNGERHDRDataTable(ds.Tables("PLUNGERHDR")))
            End If
            If (Not (ds.Tables("TREADWEARHDR")) Is Nothing) Then
                MyBase.Tables.Add(New TREADWEARHDRDataTable(ds.Tables("TREADWEARHDR")))
            End If
            If (Not (ds.Tables("TREADWEARDTL")) Is Nothing) Then
                MyBase.Tables.Add(New TREADWEARDTLDataTable(ds.Tables("TREADWEARDTL")))
            End If
            If (Not (ds.Tables("SPEEDTESTDETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New SPEEDTESTDETAILDataTable(ds.Tables("SPEEDTESTDETAIL")))
            End If
            If (Not (ds.Tables("BRAND_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New BRAND_VIEWDataTable(ds.Tables("BRAND_VIEW")))
            End If
            If (Not (ds.Tables("DEFAULTVALUES_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New DEFAULTVALUES_VIEWDataTable(ds.Tables("DEFAULTVALUES_VIEW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CERTIFICATE_VIEW() As CERTIFICATE_VIEWDataTable
        Get
            Return Me.tableCERTIFICATE_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRODUCTDATA_REPORT_VIEW() As PRODUCTDATA_REPORT_VIEWDataTable
        Get
            Return Me.tablePRODUCTDATA_REPORT_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BEADUNSEATHDR() As BEADUNSEATHDRDataTable
        Get
            Return Me.tableBEADUNSEATHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BEADUNSEATDTL() As BEADUNSEATDTLDataTable
        Get
            Return Me.tableBEADUNSEATDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ENDURANCEDTL() As ENDURANCEDTLDataTable
        Get
            Return Me.tableENDURANCEDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ENDURANCEHDR() As ENDURANCEHDRDataTable
        Get
            Return Me.tableENDURANCEHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HIGHSPEEDDTL() As HIGHSPEEDDTLDataTable
        Get
            Return Me.tableHIGHSPEEDDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HIGHSPEEDHDR() As HIGHSPEEDHDRDataTable
        Get
            Return Me.tableHIGHSPEEDHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MEASUREDTL() As MEASUREDTLDataTable
        Get
            Return Me.tableMEASUREDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MEASUREHDR() As MEASUREHDRDataTable
        Get
            Return Me.tableMEASUREHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PLUNGERDTL() As PLUNGERDTLDataTable
        Get
            Return Me.tablePLUNGERDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PLUNGERHDR() As PLUNGERHDRDataTable
        Get
            Return Me.tablePLUNGERHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TREADWEARHDR() As TREADWEARHDRDataTable
        Get
            Return Me.tableTREADWEARHDR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TREADWEARDTL() As TREADWEARDTLDataTable
        Get
            Return Me.tableTREADWEARDTL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPEEDTESTDETAIL() As SPEEDTESTDETAILDataTable
        Get
            Return Me.tableSPEEDTESTDETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BRAND_VIEW() As BRAND_VIEWDataTable
        Get
            Return Me.tableBRAND_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DEFAULTVALUES_VIEW() As DEFAULTVALUES_VIEWDataTable
        Get
            Return Me.tableDEFAULTVALUES_VIEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As EmarkPassengerWithTR = CType(MyBase.Clone,EmarkPassengerWithTR)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CERTIFICATE_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New CERTIFICATE_VIEWDataTable(ds.Tables("CERTIFICATE_VIEW")))
            End If
            If (Not (ds.Tables("PRODUCTDATA_REPORT_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTDATA_REPORT_VIEWDataTable(ds.Tables("PRODUCTDATA_REPORT_VIEW")))
            End If
            If (Not (ds.Tables("BEADUNSEATHDR")) Is Nothing) Then
                MyBase.Tables.Add(New BEADUNSEATHDRDataTable(ds.Tables("BEADUNSEATHDR")))
            End If
            If (Not (ds.Tables("BEADUNSEATDTL")) Is Nothing) Then
                MyBase.Tables.Add(New BEADUNSEATDTLDataTable(ds.Tables("BEADUNSEATDTL")))
            End If
            If (Not (ds.Tables("ENDURANCEDTL")) Is Nothing) Then
                MyBase.Tables.Add(New ENDURANCEDTLDataTable(ds.Tables("ENDURANCEDTL")))
            End If
            If (Not (ds.Tables("ENDURANCEHDR")) Is Nothing) Then
                MyBase.Tables.Add(New ENDURANCEHDRDataTable(ds.Tables("ENDURANCEHDR")))
            End If
            If (Not (ds.Tables("HIGHSPEEDDTL")) Is Nothing) Then
                MyBase.Tables.Add(New HIGHSPEEDDTLDataTable(ds.Tables("HIGHSPEEDDTL")))
            End If
            If (Not (ds.Tables("HIGHSPEEDHDR")) Is Nothing) Then
                MyBase.Tables.Add(New HIGHSPEEDHDRDataTable(ds.Tables("HIGHSPEEDHDR")))
            End If
            If (Not (ds.Tables("MEASUREDTL")) Is Nothing) Then
                MyBase.Tables.Add(New MEASUREDTLDataTable(ds.Tables("MEASUREDTL")))
            End If
            If (Not (ds.Tables("MEASUREHDR")) Is Nothing) Then
                MyBase.Tables.Add(New MEASUREHDRDataTable(ds.Tables("MEASUREHDR")))
            End If
            If (Not (ds.Tables("PLUNGERDTL")) Is Nothing) Then
                MyBase.Tables.Add(New PLUNGERDTLDataTable(ds.Tables("PLUNGERDTL")))
            End If
            If (Not (ds.Tables("PLUNGERHDR")) Is Nothing) Then
                MyBase.Tables.Add(New PLUNGERHDRDataTable(ds.Tables("PLUNGERHDR")))
            End If
            If (Not (ds.Tables("TREADWEARHDR")) Is Nothing) Then
                MyBase.Tables.Add(New TREADWEARHDRDataTable(ds.Tables("TREADWEARHDR")))
            End If
            If (Not (ds.Tables("TREADWEARDTL")) Is Nothing) Then
                MyBase.Tables.Add(New TREADWEARDTLDataTable(ds.Tables("TREADWEARDTL")))
            End If
            If (Not (ds.Tables("SPEEDTESTDETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New SPEEDTESTDETAILDataTable(ds.Tables("SPEEDTESTDETAIL")))
            End If
            If (Not (ds.Tables("BRAND_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New BRAND_VIEWDataTable(ds.Tables("BRAND_VIEW")))
            End If
            If (Not (ds.Tables("DEFAULTVALUES_VIEW")) Is Nothing) Then
                MyBase.Tables.Add(New DEFAULTVALUES_VIEWDataTable(ds.Tables("DEFAULTVALUES_VIEW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCERTIFICATE_VIEW = CType(MyBase.Tables("CERTIFICATE_VIEW"),CERTIFICATE_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCERTIFICATE_VIEW) Is Nothing) Then
                Me.tableCERTIFICATE_VIEW.InitVars
            End If
        End If
        Me.tablePRODUCTDATA_REPORT_VIEW = CType(MyBase.Tables("PRODUCTDATA_REPORT_VIEW"),PRODUCTDATA_REPORT_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRODUCTDATA_REPORT_VIEW) Is Nothing) Then
                Me.tablePRODUCTDATA_REPORT_VIEW.InitVars
            End If
        End If
        Me.tableBEADUNSEATHDR = CType(MyBase.Tables("BEADUNSEATHDR"),BEADUNSEATHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBEADUNSEATHDR) Is Nothing) Then
                Me.tableBEADUNSEATHDR.InitVars
            End If
        End If
        Me.tableBEADUNSEATDTL = CType(MyBase.Tables("BEADUNSEATDTL"),BEADUNSEATDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBEADUNSEATDTL) Is Nothing) Then
                Me.tableBEADUNSEATDTL.InitVars
            End If
        End If
        Me.tableENDURANCEDTL = CType(MyBase.Tables("ENDURANCEDTL"),ENDURANCEDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableENDURANCEDTL) Is Nothing) Then
                Me.tableENDURANCEDTL.InitVars
            End If
        End If
        Me.tableENDURANCEHDR = CType(MyBase.Tables("ENDURANCEHDR"),ENDURANCEHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableENDURANCEHDR) Is Nothing) Then
                Me.tableENDURANCEHDR.InitVars
            End If
        End If
        Me.tableHIGHSPEEDDTL = CType(MyBase.Tables("HIGHSPEEDDTL"),HIGHSPEEDDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHIGHSPEEDDTL) Is Nothing) Then
                Me.tableHIGHSPEEDDTL.InitVars
            End If
        End If
        Me.tableHIGHSPEEDHDR = CType(MyBase.Tables("HIGHSPEEDHDR"),HIGHSPEEDHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHIGHSPEEDHDR) Is Nothing) Then
                Me.tableHIGHSPEEDHDR.InitVars
            End If
        End If
        Me.tableMEASUREDTL = CType(MyBase.Tables("MEASUREDTL"),MEASUREDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMEASUREDTL) Is Nothing) Then
                Me.tableMEASUREDTL.InitVars
            End If
        End If
        Me.tableMEASUREHDR = CType(MyBase.Tables("MEASUREHDR"),MEASUREHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMEASUREHDR) Is Nothing) Then
                Me.tableMEASUREHDR.InitVars
            End If
        End If
        Me.tablePLUNGERDTL = CType(MyBase.Tables("PLUNGERDTL"),PLUNGERDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePLUNGERDTL) Is Nothing) Then
                Me.tablePLUNGERDTL.InitVars
            End If
        End If
        Me.tablePLUNGERHDR = CType(MyBase.Tables("PLUNGERHDR"),PLUNGERHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePLUNGERHDR) Is Nothing) Then
                Me.tablePLUNGERHDR.InitVars
            End If
        End If
        Me.tableTREADWEARHDR = CType(MyBase.Tables("TREADWEARHDR"),TREADWEARHDRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTREADWEARHDR) Is Nothing) Then
                Me.tableTREADWEARHDR.InitVars
            End If
        End If
        Me.tableTREADWEARDTL = CType(MyBase.Tables("TREADWEARDTL"),TREADWEARDTLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTREADWEARDTL) Is Nothing) Then
                Me.tableTREADWEARDTL.InitVars
            End If
        End If
        Me.tableSPEEDTESTDETAIL = CType(MyBase.Tables("SPEEDTESTDETAIL"),SPEEDTESTDETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPEEDTESTDETAIL) Is Nothing) Then
                Me.tableSPEEDTESTDETAIL.InitVars
            End If
        End If
        Me.tableBRAND_VIEW = CType(MyBase.Tables("BRAND_VIEW"),BRAND_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBRAND_VIEW) Is Nothing) Then
                Me.tableBRAND_VIEW.InitVars
            End If
        End If
        Me.tableDEFAULTVALUES_VIEW = CType(MyBase.Tables("DEFAULTVALUES_VIEW"),DEFAULTVALUES_VIEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDEFAULTVALUES_VIEW) Is Nothing) Then
                Me.tableDEFAULTVALUES_VIEW.InitVars
            End If
        End If
        Me.relationCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW = Me.Relations("CERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW")
        Me.relationPLUNGERDTL_PLUNGERHDR = Me.Relations("PLUNGERDTL_PLUNGERHDR")
        Me.relationCERTIFICATE_VIEW_PLUNGERHDR = Me.Relations("CERTIFICATE_VIEW_PLUNGERHDR")
        Me.relationMEASUREHDR_MEASUREDTL = Me.Relations("MEASUREHDR_MEASUREDTL")
        Me.relationBEADUNSEATHDR_BEADUNSEATDTL = Me.Relations("BEADUNSEATHDR_BEADUNSEATDTL")
        Me.relationHIGHSPEEDHDR_HIGHSPEEDDTL = Me.Relations("HIGHSPEEDHDR_HIGHSPEEDDTL")
        Me.relationENDURANCEHDR_ENDURANCEDTL = Me.Relations("ENDURANCEHDR_ENDURANCEDTL")
        Me.relationHIGHSPEEDHDR_SPEEDTESTDETAIL = Me.Relations("HIGHSPEEDHDR_SPEEDTESTDETAIL")
        Me.relationTREADWEARHDR_TREADWEARDTL = Me.Relations("TREADWEARHDR_TREADWEARDTL")
        Me.relationCERTIFICATE_VIEW_ENDURANCEHDR = Me.Relations("CERTIFICATE_VIEW_ENDURANCEHDR")
        Me.relationCERTIFICATE_VIEW_TREADWEARHDR = Me.Relations("CERTIFICATE_VIEW_TREADWEARHDR")
        Me.relationCERTIFICATE_VIEW_MEASUREHDR = Me.Relations("CERTIFICATE_VIEW_MEASUREHDR")
        Me.relationCERTIFICATE_VIEW_HIGHSPEEDHDR = Me.Relations("CERTIFICATE_VIEW_HIGHSPEEDHDR")
        Me.relationCERTIFICATE_VIEW_BEADUNSEATHDR = Me.Relations("CERTIFICATE_VIEW_BEADUNSEATHDR")
        Me.relationCERTIFICATE_VIEW_BRAND_VIEW = Me.Relations("CERTIFICATE_VIEW_BRAND_VIEW")
        Me.relationCERTIFICATE_VIEW_DEFAULTVALUES_VIEW = Me.Relations("CERTIFICATE_VIEW_DEFAULTVALUES_VIEW")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "EmarkPassengerWithTR"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/EmarkPassengerWithTR.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCERTIFICATE_VIEW = New CERTIFICATE_VIEWDataTable()
        MyBase.Tables.Add(Me.tableCERTIFICATE_VIEW)
        Me.tablePRODUCTDATA_REPORT_VIEW = New PRODUCTDATA_REPORT_VIEWDataTable()
        MyBase.Tables.Add(Me.tablePRODUCTDATA_REPORT_VIEW)
        Me.tableBEADUNSEATHDR = New BEADUNSEATHDRDataTable()
        MyBase.Tables.Add(Me.tableBEADUNSEATHDR)
        Me.tableBEADUNSEATDTL = New BEADUNSEATDTLDataTable()
        MyBase.Tables.Add(Me.tableBEADUNSEATDTL)
        Me.tableENDURANCEDTL = New ENDURANCEDTLDataTable()
        MyBase.Tables.Add(Me.tableENDURANCEDTL)
        Me.tableENDURANCEHDR = New ENDURANCEHDRDataTable()
        MyBase.Tables.Add(Me.tableENDURANCEHDR)
        Me.tableHIGHSPEEDDTL = New HIGHSPEEDDTLDataTable()
        MyBase.Tables.Add(Me.tableHIGHSPEEDDTL)
        Me.tableHIGHSPEEDHDR = New HIGHSPEEDHDRDataTable()
        MyBase.Tables.Add(Me.tableHIGHSPEEDHDR)
        Me.tableMEASUREDTL = New MEASUREDTLDataTable()
        MyBase.Tables.Add(Me.tableMEASUREDTL)
        Me.tableMEASUREHDR = New MEASUREHDRDataTable()
        MyBase.Tables.Add(Me.tableMEASUREHDR)
        Me.tablePLUNGERDTL = New PLUNGERDTLDataTable()
        MyBase.Tables.Add(Me.tablePLUNGERDTL)
        Me.tablePLUNGERHDR = New PLUNGERHDRDataTable()
        MyBase.Tables.Add(Me.tablePLUNGERHDR)
        Me.tableTREADWEARHDR = New TREADWEARHDRDataTable()
        MyBase.Tables.Add(Me.tableTREADWEARHDR)
        Me.tableTREADWEARDTL = New TREADWEARDTLDataTable()
        MyBase.Tables.Add(Me.tableTREADWEARDTL)
        Me.tableSPEEDTESTDETAIL = New SPEEDTESTDETAILDataTable()
        MyBase.Tables.Add(Me.tableSPEEDTESTDETAIL)
        Me.tableBRAND_VIEW = New BRAND_VIEWDataTable()
        MyBase.Tables.Add(Me.tableBRAND_VIEW)
        Me.tableDEFAULTVALUES_VIEW = New DEFAULTVALUES_VIEWDataTable()
        MyBase.Tables.Add(Me.tableDEFAULTVALUES_VIEW)
        Me.relationCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.SKUIDColumn}, New Global.System.Data.DataColumn() {Me.tablePRODUCTDATA_REPORT_VIEW.SKUIDColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW)
        Me.relationPLUNGERDTL_PLUNGERHDR = New Global.System.Data.DataRelation("PLUNGERDTL_PLUNGERHDR", New Global.System.Data.DataColumn() {Me.tablePLUNGERHDR.PLUNGERIDColumn}, New Global.System.Data.DataColumn() {Me.tablePLUNGERDTL.PLUNGERIDColumn}, false)
        Me.Relations.Add(Me.relationPLUNGERDTL_PLUNGERHDR)
        Me.relationCERTIFICATE_VIEW_PLUNGERHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_PLUNGERHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tablePLUNGERHDR.CERTIFICATIONTYPEIDColumn, Me.tablePLUNGERHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_PLUNGERHDR)
        Me.relationMEASUREHDR_MEASUREDTL = New Global.System.Data.DataRelation("MEASUREHDR_MEASUREDTL", New Global.System.Data.DataColumn() {Me.tableMEASUREHDR.MEASUREIDColumn}, New Global.System.Data.DataColumn() {Me.tableMEASUREDTL.MEASUREIDColumn}, false)
        Me.Relations.Add(Me.relationMEASUREHDR_MEASUREDTL)
        Me.relationBEADUNSEATHDR_BEADUNSEATDTL = New Global.System.Data.DataRelation("BEADUNSEATHDR_BEADUNSEATDTL", New Global.System.Data.DataColumn() {Me.tableBEADUNSEATHDR.BEADUNSEATIDColumn}, New Global.System.Data.DataColumn() {Me.tableBEADUNSEATDTL.BEADUNSEATIDColumn}, false)
        Me.Relations.Add(Me.relationBEADUNSEATHDR_BEADUNSEATDTL)
        Me.relationHIGHSPEEDHDR_HIGHSPEEDDTL = New Global.System.Data.DataRelation("HIGHSPEEDHDR_HIGHSPEEDDTL", New Global.System.Data.DataColumn() {Me.tableHIGHSPEEDHDR.HIGHSPEEDIDColumn}, New Global.System.Data.DataColumn() {Me.tableHIGHSPEEDDTL.HIGHSPEEDIDColumn}, false)
        Me.Relations.Add(Me.relationHIGHSPEEDHDR_HIGHSPEEDDTL)
        Me.relationENDURANCEHDR_ENDURANCEDTL = New Global.System.Data.DataRelation("ENDURANCEHDR_ENDURANCEDTL", New Global.System.Data.DataColumn() {Me.tableENDURANCEHDR.ENDURANCEIDColumn}, New Global.System.Data.DataColumn() {Me.tableENDURANCEDTL.ENDURANCEIDColumn}, false)
        Me.Relations.Add(Me.relationENDURANCEHDR_ENDURANCEDTL)
        Me.relationHIGHSPEEDHDR_SPEEDTESTDETAIL = New Global.System.Data.DataRelation("HIGHSPEEDHDR_SPEEDTESTDETAIL", New Global.System.Data.DataColumn() {Me.tableHIGHSPEEDHDR.HIGHSPEEDIDColumn}, New Global.System.Data.DataColumn() {Me.tableSPEEDTESTDETAIL.HIGHSPEEDIDColumn}, false)
        Me.Relations.Add(Me.relationHIGHSPEEDHDR_SPEEDTESTDETAIL)
        Me.relationTREADWEARHDR_TREADWEARDTL = New Global.System.Data.DataRelation("TREADWEARHDR_TREADWEARDTL", New Global.System.Data.DataColumn() {Me.tableTREADWEARHDR.TREADWEARIDColumn}, New Global.System.Data.DataColumn() {Me.tableTREADWEARDTL.TREADWEARIDColumn}, false)
        Me.Relations.Add(Me.relationTREADWEARHDR_TREADWEARDTL)
        Me.relationCERTIFICATE_VIEW_ENDURANCEHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_ENDURANCEHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableENDURANCEHDR.CERTIFICATIONTYPEIDColumn, Me.tableENDURANCEHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_ENDURANCEHDR)
        Me.relationCERTIFICATE_VIEW_TREADWEARHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_TREADWEARHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableTREADWEARHDR.CERTIFICATIONTYPEIDColumn, Me.tableTREADWEARHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_TREADWEARHDR)
        Me.relationCERTIFICATE_VIEW_MEASUREHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_MEASUREHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableMEASUREHDR.CERTIFICATIONTYPEIDColumn, Me.tableMEASUREHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_MEASUREHDR)
        Me.relationCERTIFICATE_VIEW_HIGHSPEEDHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_HIGHSPEEDHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableHIGHSPEEDHDR.CERTIFICATIONTYPEIDColumn, Me.tableHIGHSPEEDHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_HIGHSPEEDHDR)
        Me.relationCERTIFICATE_VIEW_BEADUNSEATHDR = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_BEADUNSEATHDR", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATIONTYPEIDColumn, Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableBEADUNSEATHDR.CERTIFICATIONTYPEIDColumn, Me.tableBEADUNSEATHDR.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_BEADUNSEATHDR)
        Me.relationCERTIFICATE_VIEW_BRAND_VIEW = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_BRAND_VIEW", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableBRAND_VIEW.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_BRAND_VIEW)
        Me.relationCERTIFICATE_VIEW_DEFAULTVALUES_VIEW = New Global.System.Data.DataRelation("CERTIFICATE_VIEW_DEFAULTVALUES_VIEW", New Global.System.Data.DataColumn() {Me.tableCERTIFICATE_VIEW.CERTIFICATENUMBERColumn}, New Global.System.Data.DataColumn() {Me.tableDEFAULTVALUES_VIEW.CERTIFICATENUMBERColumn}, false)
        Me.Relations.Add(Me.relationCERTIFICATE_VIEW_DEFAULTVALUES_VIEW)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCERTIFICATE_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePRODUCTDATA_REPORT_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBEADUNSEATHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBEADUNSEATDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeENDURANCEDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeENDURANCEHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHIGHSPEEDDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHIGHSPEEDHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMEASUREDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMEASUREHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePLUNGERDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePLUNGERHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTREADWEARHDR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTREADWEARDTL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSPEEDTESTDETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBRAND_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDEFAULTVALUES_VIEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CERTIFICATE_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As CERTIFICATE_VIEWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PRODUCTDATA_REPORT_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As PRODUCTDATA_REPORT_VIEWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BEADUNSEATHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As BEADUNSEATHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BEADUNSEATDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As BEADUNSEATDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ENDURANCEDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As ENDURANCEDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ENDURANCEHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As ENDURANCEHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HIGHSPEEDDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As HIGHSPEEDDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HIGHSPEEDHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As HIGHSPEEDHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MEASUREDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As MEASUREDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MEASUREHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As MEASUREHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PLUNGERDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As PLUNGERDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PLUNGERHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As PLUNGERHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TREADWEARHDRRowChangeEventHandler(ByVal sender As Object, ByVal e As TREADWEARHDRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TREADWEARDTLRowChangeEventHandler(ByVal sender As Object, ByVal e As TREADWEARDTLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SPEEDTESTDETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As SPEEDTESTDETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BRAND_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As BRAND_VIEWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DEFAULTVALUES_VIEWRowChangeEventHandler(ByVal sender As Object, ByVal e As DEFAULTVALUES_VIEWRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CERTIFICATE_VIEWDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSKUID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPENAME As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnDATESUBMITED As Global.System.Data.DataColumn
        
        Private columnACTIVESTATUS As Global.System.Data.DataColumn
        
        Private columnDATEASSIGNED_EGI As Global.System.Data.DataColumn
        
        Private columnDATEAPPROVED_CEGI As Global.System.Data.DataColumn
        
        Private columnRENEWALREQUIRED_CGIN As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALREQUIRED_EI As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALNUMBER_EI As Global.System.Data.DataColumn
        
        Private columnJOBREPORTNUMBER_CEN As Global.System.Data.DataColumn
        
        Private columnEXTENSION_EN As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALMOLDSTAMPING_E As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALDATEASSIGNED_E As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALDATESUBMITTED_E As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALDATEAPPROVED_E As Global.System.Data.DataColumn
        
        Private columnEMARKREFERENCE_I As Global.System.Data.DataColumn
        
        Private columnEXPIRYDATE_I As Global.System.Data.DataColumn
        
        Private columnFAMILY_I As Global.System.Data.DataColumn
        
        Private columnPRODUCTLOCATION_C As Global.System.Data.DataColumn
        
        Private columnCOUNTRYOFMANUFACTURE_N As Global.System.Data.DataColumn
        
        Private columnCUSTOMER_N As Global.System.Data.DataColumn
        
        Private columnCUSTOMERSPECIFIC_N As Global.System.Data.DataColumn
        
        Private columnIMPORTER_N As Global.System.Data.DataColumn
        
        Private columnIMPORTERADDRESS_N As Global.System.Data.DataColumn
        
        Private columnIMPORTERREPRESENTATIVE_N As Global.System.Data.DataColumn
        
        Private columnCOUNTRYLOCATION_N As Global.System.Data.DataColumn
        
        Private columnBATCHNUMBER_G As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CERTIFICATE_VIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPENAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATESUBMITEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATESUBMITED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTIVESTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTIVESTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEASSIGNED_EGIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEASSIGNED_EGI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEAPPROVED_CEGIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEAPPROVED_CEGI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RENEWALREQUIRED_CGINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRENEWALREQUIRED_CGIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALREQUIRED_EIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALREQUIRED_EI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALNUMBER_EIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALNUMBER_EI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOBREPORTNUMBER_CENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOBREPORTNUMBER_CEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALMOLDSTAMPING_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALMOLDSTAMPING_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALDATEASSIGNED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALDATEASSIGNED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALDATESUBMITTED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALDATESUBMITTED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALDATEAPPROVED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALDATEAPPROVED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMARKREFERENCE_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMARKREFERENCE_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXPIRYDATE_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXPIRYDATE_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAMILY_IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILY_I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTLOCATION_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTLOCATION_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COUNTRYOFMANUFACTURE_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNTRYOFMANUFACTURE_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTOMER_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMER_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTOMERSPECIFIC_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMERSPECIFIC_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTER_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTER_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTERADDRESS_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTERADDRESS_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTERREPRESENTATIVE_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTERREPRESENTATIVE_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COUNTRYLOCATION_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNTRYLOCATION_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BATCHNUMBER_GColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBATCHNUMBER_G
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CERTIFICATE_VIEWRow
            Get
                Return CType(Me.Rows(index),CERTIFICATE_VIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CERTIFICATE_VIEWRowChanging As CERTIFICATE_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CERTIFICATE_VIEWRowChanged As CERTIFICATE_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CERTIFICATE_VIEWRowDeleting As CERTIFICATE_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CERTIFICATE_VIEWRowDeleted As CERTIFICATE_VIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCERTIFICATE_VIEWRow(ByVal row As CERTIFICATE_VIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCERTIFICATE_VIEWRow( _
                    ByVal SKUID As Decimal,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATIONTYPENAME As String,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal DATESUBMITED As Date,  _
                    ByVal ACTIVESTATUS As String,  _
                    ByVal DATEASSIGNED_EGI As Date,  _
                    ByVal DATEAPPROVED_CEGI As Date,  _
                    ByVal RENEWALREQUIRED_CGIN As String,  _
                    ByVal SUPPLEMENTALREQUIRED_EI As String,  _
                    ByVal SUPPLEMENTALNUMBER_EI As String,  _
                    ByVal JOBREPORTNUMBER_CEN As String,  _
                    ByVal EXTENSION_EN As String,  _
                    ByVal SUPPLEMENTALMOLDSTAMPING_E As String,  _
                    ByVal SUPPLEMENTALDATEASSIGNED_E As Date,  _
                    ByVal SUPPLEMENTALDATESUBMITTED_E As Date,  _
                    ByVal SUPPLEMENTALDATEAPPROVED_E As Date,  _
                    ByVal EMARKREFERENCE_I As String,  _
                    ByVal EXPIRYDATE_I As Date,  _
                    ByVal FAMILY_I As String,  _
                    ByVal PRODUCTLOCATION_C As String,  _
                    ByVal COUNTRYOFMANUFACTURE_N As String,  _
                    ByVal CUSTOMER_N As String,  _
                    ByVal CUSTOMERSPECIFIC_N As String,  _
                    ByVal IMPORTER_N As String,  _
                    ByVal IMPORTERADDRESS_N As String,  _
                    ByVal IMPORTERREPRESENTATIVE_N As String,  _
                    ByVal COUNTRYLOCATION_N As String,  _
                    ByVal BATCHNUMBER_G As String) As CERTIFICATE_VIEWRow
            Dim rowCERTIFICATE_VIEWRow As CERTIFICATE_VIEWRow = CType(Me.NewRow,CERTIFICATE_VIEWRow)
            Dim columnValuesArray() As Object = New Object() {SKUID, CERTIFICATIONTYPEID, CERTIFICATIONTYPENAME, CERTIFICATENUMBER, DATESUBMITED, ACTIVESTATUS, DATEASSIGNED_EGI, DATEAPPROVED_CEGI, RENEWALREQUIRED_CGIN, SUPPLEMENTALREQUIRED_EI, SUPPLEMENTALNUMBER_EI, JOBREPORTNUMBER_CEN, EXTENSION_EN, SUPPLEMENTALMOLDSTAMPING_E, SUPPLEMENTALDATEASSIGNED_E, SUPPLEMENTALDATESUBMITTED_E, SUPPLEMENTALDATEAPPROVED_E, EMARKREFERENCE_I, EXPIRYDATE_I, FAMILY_I, PRODUCTLOCATION_C, COUNTRYOFMANUFACTURE_N, CUSTOMER_N, CUSTOMERSPECIFIC_N, IMPORTER_N, IMPORTERADDRESS_N, IMPORTERREPRESENTATIVE_N, COUNTRYLOCATION_N, BATCHNUMBER_G}
            rowCERTIFICATE_VIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCERTIFICATE_VIEWRow)
            Return rowCERTIFICATE_VIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CERTIFICATE_VIEWDataTable = CType(MyBase.Clone,CERTIFICATE_VIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CERTIFICATE_VIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSKUID = MyBase.Columns("SKUID")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATIONTYPENAME = MyBase.Columns("CERTIFICATIONTYPENAME")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnDATESUBMITED = MyBase.Columns("DATESUBMITED")
            Me.columnACTIVESTATUS = MyBase.Columns("ACTIVESTATUS")
            Me.columnDATEASSIGNED_EGI = MyBase.Columns("DATEASSIGNED_EGI")
            Me.columnDATEAPPROVED_CEGI = MyBase.Columns("DATEAPPROVED_CEGI")
            Me.columnRENEWALREQUIRED_CGIN = MyBase.Columns("RENEWALREQUIRED_CGIN")
            Me.columnSUPPLEMENTALREQUIRED_EI = MyBase.Columns("SUPPLEMENTALREQUIRED_EI")
            Me.columnSUPPLEMENTALNUMBER_EI = MyBase.Columns("SUPPLEMENTALNUMBER_EI")
            Me.columnJOBREPORTNUMBER_CEN = MyBase.Columns("JOBREPORTNUMBER_CEN")
            Me.columnEXTENSION_EN = MyBase.Columns("EXTENSION_EN")
            Me.columnSUPPLEMENTALMOLDSTAMPING_E = MyBase.Columns("SUPPLEMENTALMOLDSTAMPING_E")
            Me.columnSUPPLEMENTALDATEASSIGNED_E = MyBase.Columns("SUPPLEMENTALDATEASSIGNED_E")
            Me.columnSUPPLEMENTALDATESUBMITTED_E = MyBase.Columns("SUPPLEMENTALDATESUBMITTED_E")
            Me.columnSUPPLEMENTALDATEAPPROVED_E = MyBase.Columns("SUPPLEMENTALDATEAPPROVED_E")
            Me.columnEMARKREFERENCE_I = MyBase.Columns("EMARKREFERENCE_I")
            Me.columnEXPIRYDATE_I = MyBase.Columns("EXPIRYDATE_I")
            Me.columnFAMILY_I = MyBase.Columns("FAMILY_I")
            Me.columnPRODUCTLOCATION_C = MyBase.Columns("PRODUCTLOCATION_C")
            Me.columnCOUNTRYOFMANUFACTURE_N = MyBase.Columns("COUNTRYOFMANUFACTURE_N")
            Me.columnCUSTOMER_N = MyBase.Columns("CUSTOMER_N")
            Me.columnCUSTOMERSPECIFIC_N = MyBase.Columns("CUSTOMERSPECIFIC_N")
            Me.columnIMPORTER_N = MyBase.Columns("IMPORTER_N")
            Me.columnIMPORTERADDRESS_N = MyBase.Columns("IMPORTERADDRESS_N")
            Me.columnIMPORTERREPRESENTATIVE_N = MyBase.Columns("IMPORTERREPRESENTATIVE_N")
            Me.columnCOUNTRYLOCATION_N = MyBase.Columns("COUNTRYLOCATION_N")
            Me.columnBATCHNUMBER_G = MyBase.Columns("BATCHNUMBER_G")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSKUID = New Global.System.Data.DataColumn("SKUID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKUID)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATIONTYPENAME = New Global.System.Data.DataColumn("CERTIFICATIONTYPENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPENAME)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnDATESUBMITED = New Global.System.Data.DataColumn("DATESUBMITED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATESUBMITED)
            Me.columnACTIVESTATUS = New Global.System.Data.DataColumn("ACTIVESTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTIVESTATUS)
            Me.columnDATEASSIGNED_EGI = New Global.System.Data.DataColumn("DATEASSIGNED_EGI", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEASSIGNED_EGI)
            Me.columnDATEAPPROVED_CEGI = New Global.System.Data.DataColumn("DATEAPPROVED_CEGI", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEAPPROVED_CEGI)
            Me.columnRENEWALREQUIRED_CGIN = New Global.System.Data.DataColumn("RENEWALREQUIRED_CGIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRENEWALREQUIRED_CGIN)
            Me.columnSUPPLEMENTALREQUIRED_EI = New Global.System.Data.DataColumn("SUPPLEMENTALREQUIRED_EI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALREQUIRED_EI)
            Me.columnSUPPLEMENTALNUMBER_EI = New Global.System.Data.DataColumn("SUPPLEMENTALNUMBER_EI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALNUMBER_EI)
            Me.columnJOBREPORTNUMBER_CEN = New Global.System.Data.DataColumn("JOBREPORTNUMBER_CEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOBREPORTNUMBER_CEN)
            Me.columnEXTENSION_EN = New Global.System.Data.DataColumn("EXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION_EN)
            Me.columnSUPPLEMENTALMOLDSTAMPING_E = New Global.System.Data.DataColumn("SUPPLEMENTALMOLDSTAMPING_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALMOLDSTAMPING_E)
            Me.columnSUPPLEMENTALDATEASSIGNED_E = New Global.System.Data.DataColumn("SUPPLEMENTALDATEASSIGNED_E", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALDATEASSIGNED_E)
            Me.columnSUPPLEMENTALDATESUBMITTED_E = New Global.System.Data.DataColumn("SUPPLEMENTALDATESUBMITTED_E", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALDATESUBMITTED_E)
            Me.columnSUPPLEMENTALDATEAPPROVED_E = New Global.System.Data.DataColumn("SUPPLEMENTALDATEAPPROVED_E", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALDATEAPPROVED_E)
            Me.columnEMARKREFERENCE_I = New Global.System.Data.DataColumn("EMARKREFERENCE_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMARKREFERENCE_I)
            Me.columnEXPIRYDATE_I = New Global.System.Data.DataColumn("EXPIRYDATE_I", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXPIRYDATE_I)
            Me.columnFAMILY_I = New Global.System.Data.DataColumn("FAMILY_I", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILY_I)
            Me.columnPRODUCTLOCATION_C = New Global.System.Data.DataColumn("PRODUCTLOCATION_C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTLOCATION_C)
            Me.columnCOUNTRYOFMANUFACTURE_N = New Global.System.Data.DataColumn("COUNTRYOFMANUFACTURE_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNTRYOFMANUFACTURE_N)
            Me.columnCUSTOMER_N = New Global.System.Data.DataColumn("CUSTOMER_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMER_N)
            Me.columnCUSTOMERSPECIFIC_N = New Global.System.Data.DataColumn("CUSTOMERSPECIFIC_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMERSPECIFIC_N)
            Me.columnIMPORTER_N = New Global.System.Data.DataColumn("IMPORTER_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTER_N)
            Me.columnIMPORTERADDRESS_N = New Global.System.Data.DataColumn("IMPORTERADDRESS_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTERADDRESS_N)
            Me.columnIMPORTERREPRESENTATIVE_N = New Global.System.Data.DataColumn("IMPORTERREPRESENTATIVE_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTERREPRESENTATIVE_N)
            Me.columnCOUNTRYLOCATION_N = New Global.System.Data.DataColumn("COUNTRYLOCATION_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNTRYLOCATION_N)
            Me.columnBATCHNUMBER_G = New Global.System.Data.DataColumn("BATCHNUMBER_G", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBATCHNUMBER_G)
            Me.columnSKUID.AllowDBNull = false
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATIONTYPENAME.MaxLength = 50
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnACTIVESTATUS.MaxLength = 1
            Me.columnRENEWALREQUIRED_CGIN.MaxLength = 1
            Me.columnSUPPLEMENTALREQUIRED_EI.MaxLength = 1
            Me.columnSUPPLEMENTALNUMBER_EI.MaxLength = 120
            Me.columnJOBREPORTNUMBER_CEN.MaxLength = 120
            Me.columnEXTENSION_EN.MaxLength = 120
            Me.columnSUPPLEMENTALMOLDSTAMPING_E.MaxLength = 120
            Me.columnEMARKREFERENCE_I.MaxLength = 120
            Me.columnFAMILY_I.MaxLength = 120
            Me.columnPRODUCTLOCATION_C.MaxLength = 200
            Me.columnCOUNTRYOFMANUFACTURE_N.MaxLength = 200
            Me.columnCUSTOMER_N.MaxLength = 400
            Me.columnCUSTOMERSPECIFIC_N.MaxLength = 1
            Me.columnIMPORTER_N.MaxLength = 400
            Me.columnIMPORTERADDRESS_N.MaxLength = 800
            Me.columnIMPORTERREPRESENTATIVE_N.MaxLength = 400
            Me.columnCOUNTRYLOCATION_N.MaxLength = 400
            Me.columnBATCHNUMBER_G.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCERTIFICATE_VIEWRow() As CERTIFICATE_VIEWRow
            Return CType(Me.NewRow,CERTIFICATE_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CERTIFICATE_VIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CERTIFICATE_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CERTIFICATE_VIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent CERTIFICATE_VIEWRowChanged(Me, New CERTIFICATE_VIEWRowChangeEvent(CType(e.Row,CERTIFICATE_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CERTIFICATE_VIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent CERTIFICATE_VIEWRowChanging(Me, New CERTIFICATE_VIEWRowChangeEvent(CType(e.Row,CERTIFICATE_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CERTIFICATE_VIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent CERTIFICATE_VIEWRowDeleted(Me, New CERTIFICATE_VIEWRowChangeEvent(CType(e.Row,CERTIFICATE_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CERTIFICATE_VIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent CERTIFICATE_VIEWRowDeleting(Me, New CERTIFICATE_VIEWRowChangeEvent(CType(e.Row,CERTIFICATE_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCERTIFICATE_VIEWRow(ByVal row As CERTIFICATE_VIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CERTIFICATE_VIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRODUCTDATA_REPORT_VIEWDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSKUID As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnBRANDCODE As Global.System.Data.DataColumn
        
        Private columnTIRETYPEID As Global.System.Data.DataColumn
        
        Private columnNPRID As Global.System.Data.DataColumn
        
        Private columnSIZESTAMP As Global.System.Data.DataColumn
        
        Private columnDISCONTINUEDDATE As Global.System.Data.DataColumn
        
        Private columnSPECNUMBER As Global.System.Data.DataColumn
        
        Private columnSPEEDRATING As Global.System.Data.DataColumn
        
        Private columnSINGLOADINDEX As Global.System.Data.DataColumn
        
        Private columnDUALLOADINDEX As Global.System.Data.DataColumn
        
        Private columnBELTEDRADIALYN As Global.System.Data.DataColumn
        
        Private columnTUBELESSYN As Global.System.Data.DataColumn
        
        Private columnREINFORCEDYN As Global.System.Data.DataColumn
        
        Private columnEXTRALOADYN As Global.System.Data.DataColumn
        
        Private columnMEASURINGRIM As Global.System.Data.DataColumn
        
        Private columnUTQGTREADWEAR As Global.System.Data.DataColumn
        
        Private columnUTQGTRACTION As Global.System.Data.DataColumn
        
        Private columnUTQGTEMP As Global.System.Data.DataColumn
        
        Private columnMUDSNOWYN As Global.System.Data.DataColumn
        
        Private columnRIMDIAMETER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnBRANDDESC As Global.System.Data.DataColumn
        
        Private columnLOADRANGE As Global.System.Data.DataColumn
        
        Private columnMEARIMWIDTH As Global.System.Data.DataColumn
        
        Private columnREGROOVABLEIND As Global.System.Data.DataColumn
        
        Private columnPLANTPRODUCED As Global.System.Data.DataColumn
        
        Private columnMOSTRECENTTESTDATE As Global.System.Data.DataColumn
        
        Private columnIMARK As Global.System.Data.DataColumn
        
        Private columnINFORMENUMBER As Global.System.Data.DataColumn
        
        Private columnFECHADATE As Global.System.Data.DataColumn
        
        Private columnTREADPATTERN As Global.System.Data.DataColumn
        
        Private columnSPECIALPROTECTIVEBAND As Global.System.Data.DataColumn
        
        Private columnNOMINALTIREWIDTH As Global.System.Data.DataColumn
        
        Private columnASPECTRADIO As Global.System.Data.DataColumn
        
        Private columnTREADWEARINDICATORS As Global.System.Data.DataColumn
        
        Private columnNAMEOFMANUFACTURER As Global.System.Data.DataColumn
        
        Private columnFAMILY As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSUPPLEMENTALEXTENSION_EN As Global.System.Data.DataColumn
        
        Private columnEXTENSION_EN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRODUCTDATA_REPORT_VIEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKUID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRETYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRETYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NPRIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNPRID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIZESTAMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZESTAMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCONTINUEDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCONTINUEDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDRATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDRATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SINGLOADINDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSINGLOADINDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DUALLOADINDEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDUALLOADINDEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BELTEDRADIALYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBELTEDRADIALYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TUBELESSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTUBELESSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REINFORCEDYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREINFORCEDYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTRALOADYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRALOADYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEASURINGRIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEASURINGRIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTREADWEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTREADWEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTRACTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTRACTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTQGTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTQGTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MUDSNOWYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUDSNOWYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRANDDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANDDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADRANGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOADRANGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEARIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEARIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REGROOVABLEINDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGROOVABLEIND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLANTPRODUCEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANTPRODUCED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOSTRECENTTESTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOSTRECENTTESTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFORMENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFORMENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHADATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHADATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADPATTERNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADPATTERN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIALPROTECTIVEBANDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIALPROTECTIVEBAND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALTIREWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALTIREWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASPECTRADIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASPECTRADIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADWEARINDICATORSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADWEARINDICATORS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMEOFMANUFACTURERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMEOFMANUFACTURER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAMILYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUPPLEMENTALEXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPPLEMENTALEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTENSION_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTENSION_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRODUCTDATA_REPORT_VIEWRow
            Get
                Return CType(Me.Rows(index),PRODUCTDATA_REPORT_VIEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowChanging As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowChanged As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowDeleting As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTDATA_REPORT_VIEWRowDeleted As PRODUCTDATA_REPORT_VIEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPRODUCTDATA_REPORT_VIEWRow(ByVal row As PRODUCTDATA_REPORT_VIEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPRODUCTDATA_REPORT_VIEWRow( _
                    ByVal parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW As CERTIFICATE_VIEWRow,  _
                    ByVal SKU As String,  _
                    ByVal BRANDCODE As String,  _
                    ByVal TIRETYPEID As Decimal,  _
                    ByVal NPRID As Decimal,  _
                    ByVal SIZESTAMP As String,  _
                    ByVal DISCONTINUEDDATE As Date,  _
                    ByVal SPECNUMBER As String,  _
                    ByVal SPEEDRATING As String,  _
                    ByVal SINGLOADINDEX As String,  _
                    ByVal DUALLOADINDEX As String,  _
                    ByVal BELTEDRADIALYN As String,  _
                    ByVal TUBELESSYN As String,  _
                    ByVal REINFORCEDYN As String,  _
                    ByVal EXTRALOADYN As String,  _
                    ByVal MEASURINGRIM As String,  _
                    ByVal UTQGTREADWEAR As String,  _
                    ByVal UTQGTRACTION As String,  _
                    ByVal UTQGTEMP As String,  _
                    ByVal MUDSNOWYN As String,  _
                    ByVal RIMDIAMETER As Decimal,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal BRANDDESC As String,  _
                    ByVal LOADRANGE As String,  _
                    ByVal MEARIMWIDTH As Decimal,  _
                    ByVal REGROOVABLEIND As String,  _
                    ByVal PLANTPRODUCED As String,  _
                    ByVal MOSTRECENTTESTDATE As Date,  _
                    ByVal IMARK As String,  _
                    ByVal INFORMENUMBER As String,  _
                    ByVal FECHADATE As Date,  _
                    ByVal TREADPATTERN As String,  _
                    ByVal SPECIALPROTECTIVEBAND As String,  _
                    ByVal NOMINALTIREWIDTH As String,  _
                    ByVal ASPECTRADIO As String,  _
                    ByVal TREADWEARINDICATORS As String,  _
                    ByVal NAMEOFMANUFACTURER As String,  _
                    ByVal FAMILY As String,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SUPPLEMENTALEXTENSION_EN As String,  _
                    ByVal EXTENSION_EN As String) As PRODUCTDATA_REPORT_VIEWRow
            Dim rowPRODUCTDATA_REPORT_VIEWRow As PRODUCTDATA_REPORT_VIEWRow = CType(Me.NewRow,PRODUCTDATA_REPORT_VIEWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SKU, BRANDCODE, TIRETYPEID, NPRID, SIZESTAMP, DISCONTINUEDDATE, SPECNUMBER, SPEEDRATING, SINGLOADINDEX, DUALLOADINDEX, BELTEDRADIALYN, TUBELESSYN, REINFORCEDYN, EXTRALOADYN, MEASURINGRIM, UTQGTREADWEAR, UTQGTRACTION, UTQGTEMP, MUDSNOWYN, RIMDIAMETER, SERIALDATE, BRANDDESC, LOADRANGE, MEARIMWIDTH, REGROOVABLEIND, PLANTPRODUCED, MOSTRECENTTESTDATE, IMARK, INFORMENUMBER, FECHADATE, TREADPATTERN, SPECIALPROTECTIVEBAND, NOMINALTIREWIDTH, ASPECTRADIO, TREADWEARINDICATORS, NAMEOFMANUFACTURER, FAMILY, DOTSERIALNUMBER, CERTIFICATENUMBER, SUPPLEMENTALEXTENSION_EN, EXTENSION_EN}
            If (Not (parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW) Is Nothing) Then
                columnValuesArray(0) = parentCERTIFICATE_VIEWRowByCERTIFICATE_VIEW_PRODUCTDATA_REPORT_VIEW(0)
            End If
            rowPRODUCTDATA_REPORT_VIEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRODUCTDATA_REPORT_VIEWRow)
            Return rowPRODUCTDATA_REPORT_VIEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRODUCTDATA_REPORT_VIEWDataTable = CType(MyBase.Clone,PRODUCTDATA_REPORT_VIEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRODUCTDATA_REPORT_VIEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSKUID = MyBase.Columns("SKUID")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnBRANDCODE = MyBase.Columns("BRANDCODE")
            Me.columnTIRETYPEID = MyBase.Columns("TIRETYPEID")
            Me.columnNPRID = MyBase.Columns("NPRID")
            Me.columnSIZESTAMP = MyBase.Columns("SIZESTAMP")
            Me.columnDISCONTINUEDDATE = MyBase.Columns("DISCONTINUEDDATE")
            Me.columnSPECNUMBER = MyBase.Columns("SPECNUMBER")
            Me.columnSPEEDRATING = MyBase.Columns("SPEEDRATING")
            Me.columnSINGLOADINDEX = MyBase.Columns("SINGLOADINDEX")
            Me.columnDUALLOADINDEX = MyBase.Columns("DUALLOADINDEX")
            Me.columnBELTEDRADIALYN = MyBase.Columns("BELTEDRADIALYN")
            Me.columnTUBELESSYN = MyBase.Columns("TUBELESSYN")
            Me.columnREINFORCEDYN = MyBase.Columns("REINFORCEDYN")
            Me.columnEXTRALOADYN = MyBase.Columns("EXTRALOADYN")
            Me.columnMEASURINGRIM = MyBase.Columns("MEASURINGRIM")
            Me.columnUTQGTREADWEAR = MyBase.Columns("UTQGTREADWEAR")
            Me.columnUTQGTRACTION = MyBase.Columns("UTQGTRACTION")
            Me.columnUTQGTEMP = MyBase.Columns("UTQGTEMP")
            Me.columnMUDSNOWYN = MyBase.Columns("MUDSNOWYN")
            Me.columnRIMDIAMETER = MyBase.Columns("RIMDIAMETER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnBRANDDESC = MyBase.Columns("BRANDDESC")
            Me.columnLOADRANGE = MyBase.Columns("LOADRANGE")
            Me.columnMEARIMWIDTH = MyBase.Columns("MEARIMWIDTH")
            Me.columnREGROOVABLEIND = MyBase.Columns("REGROOVABLEIND")
            Me.columnPLANTPRODUCED = MyBase.Columns("PLANTPRODUCED")
            Me.columnMOSTRECENTTESTDATE = MyBase.Columns("MOSTRECENTTESTDATE")
            Me.columnIMARK = MyBase.Columns("IMARK")
            Me.columnINFORMENUMBER = MyBase.Columns("INFORMENUMBER")
            Me.columnFECHADATE = MyBase.Columns("FECHADATE")
            Me.columnTREADPATTERN = MyBase.Columns("TREADPATTERN")
            Me.columnSPECIALPROTECTIVEBAND = MyBase.Columns("SPECIALPROTECTIVEBAND")
            Me.columnNOMINALTIREWIDTH = MyBase.Columns("NOMINALTIREWIDTH")
            Me.columnASPECTRADIO = MyBase.Columns("ASPECTRADIO")
            Me.columnTREADWEARINDICATORS = MyBase.Columns("TREADWEARINDICATORS")
            Me.columnNAMEOFMANUFACTURER = MyBase.Columns("NAMEOFMANUFACTURER")
            Me.columnFAMILY = MyBase.Columns("FAMILY")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSUPPLEMENTALEXTENSION_EN = MyBase.Columns("SUPPLEMENTALEXTENSION_EN")
            Me.columnEXTENSION_EN = MyBase.Columns("EXTENSION_EN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSKUID = New Global.System.Data.DataColumn("SKUID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKUID)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnBRANDCODE = New Global.System.Data.DataColumn("BRANDCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDCODE)
            Me.columnTIRETYPEID = New Global.System.Data.DataColumn("TIRETYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRETYPEID)
            Me.columnNPRID = New Global.System.Data.DataColumn("NPRID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNPRID)
            Me.columnSIZESTAMP = New Global.System.Data.DataColumn("SIZESTAMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZESTAMP)
            Me.columnDISCONTINUEDDATE = New Global.System.Data.DataColumn("DISCONTINUEDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCONTINUEDDATE)
            Me.columnSPECNUMBER = New Global.System.Data.DataColumn("SPECNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECNUMBER)
            Me.columnSPEEDRATING = New Global.System.Data.DataColumn("SPEEDRATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDRATING)
            Me.columnSINGLOADINDEX = New Global.System.Data.DataColumn("SINGLOADINDEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSINGLOADINDEX)
            Me.columnDUALLOADINDEX = New Global.System.Data.DataColumn("DUALLOADINDEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDUALLOADINDEX)
            Me.columnBELTEDRADIALYN = New Global.System.Data.DataColumn("BELTEDRADIALYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBELTEDRADIALYN)
            Me.columnTUBELESSYN = New Global.System.Data.DataColumn("TUBELESSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTUBELESSYN)
            Me.columnREINFORCEDYN = New Global.System.Data.DataColumn("REINFORCEDYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREINFORCEDYN)
            Me.columnEXTRALOADYN = New Global.System.Data.DataColumn("EXTRALOADYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRALOADYN)
            Me.columnMEASURINGRIM = New Global.System.Data.DataColumn("MEASURINGRIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEASURINGRIM)
            Me.columnUTQGTREADWEAR = New Global.System.Data.DataColumn("UTQGTREADWEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTREADWEAR)
            Me.columnUTQGTRACTION = New Global.System.Data.DataColumn("UTQGTRACTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTRACTION)
            Me.columnUTQGTEMP = New Global.System.Data.DataColumn("UTQGTEMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTQGTEMP)
            Me.columnMUDSNOWYN = New Global.System.Data.DataColumn("MUDSNOWYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUDSNOWYN)
            Me.columnRIMDIAMETER = New Global.System.Data.DataColumn("RIMDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMDIAMETER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnBRANDDESC = New Global.System.Data.DataColumn("BRANDDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANDDESC)
            Me.columnLOADRANGE = New Global.System.Data.DataColumn("LOADRANGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOADRANGE)
            Me.columnMEARIMWIDTH = New Global.System.Data.DataColumn("MEARIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEARIMWIDTH)
            Me.columnREGROOVABLEIND = New Global.System.Data.DataColumn("REGROOVABLEIND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGROOVABLEIND)
            Me.columnPLANTPRODUCED = New Global.System.Data.DataColumn("PLANTPRODUCED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANTPRODUCED)
            Me.columnMOSTRECENTTESTDATE = New Global.System.Data.DataColumn("MOSTRECENTTESTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOSTRECENTTESTDATE)
            Me.columnIMARK = New Global.System.Data.DataColumn("IMARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMARK)
            Me.columnINFORMENUMBER = New Global.System.Data.DataColumn("INFORMENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFORMENUMBER)
            Me.columnFECHADATE = New Global.System.Data.DataColumn("FECHADATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHADATE)
            Me.columnTREADPATTERN = New Global.System.Data.DataColumn("TREADPATTERN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADPATTERN)
            Me.columnSPECIALPROTECTIVEBAND = New Global.System.Data.DataColumn("SPECIALPROTECTIVEBAND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIALPROTECTIVEBAND)
            Me.columnNOMINALTIREWIDTH = New Global.System.Data.DataColumn("NOMINALTIREWIDTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALTIREWIDTH)
            Me.columnASPECTRADIO = New Global.System.Data.DataColumn("ASPECTRADIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASPECTRADIO)
            Me.columnTREADWEARINDICATORS = New Global.System.Data.DataColumn("TREADWEARINDICATORS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADWEARINDICATORS)
            Me.columnNAMEOFMANUFACTURER = New Global.System.Data.DataColumn("NAMEOFMANUFACTURER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMEOFMANUFACTURER)
            Me.columnFAMILY = New Global.System.Data.DataColumn("FAMILY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILY)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSUPPLEMENTALEXTENSION_EN = New Global.System.Data.DataColumn("SUPPLEMENTALEXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLEMENTALEXTENSION_EN)
            Me.columnEXTENSION_EN = New Global.System.Data.DataColumn("EXTENSION_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTENSION_EN)
            Me.columnSKUID.AllowDBNull = false
            Me.columnSKU.AllowDBNull = false
            Me.columnSKU.MaxLength = 30
            Me.columnBRANDCODE.MaxLength = 10
            Me.columnSIZESTAMP.AllowDBNull = false
            Me.columnSIZESTAMP.MaxLength = 20
            Me.columnSPECNUMBER.MaxLength = 30
            Me.columnSPEEDRATING.MaxLength = 40
            Me.columnSINGLOADINDEX.MaxLength = 40
            Me.columnDUALLOADINDEX.MaxLength = 40
            Me.columnBELTEDRADIALYN.MaxLength = 4
            Me.columnTUBELESSYN.MaxLength = 4
            Me.columnREINFORCEDYN.MaxLength = 4
            Me.columnEXTRALOADYN.MaxLength = 4
            Me.columnMEASURINGRIM.MaxLength = 40
            Me.columnUTQGTREADWEAR.MaxLength = 40
            Me.columnUTQGTRACTION.MaxLength = 40
            Me.columnUTQGTEMP.MaxLength = 40
            Me.columnMUDSNOWYN.MaxLength = 4
            Me.columnBRANDDESC.MaxLength = 400
            Me.columnLOADRANGE.MaxLength = 120
            Me.columnREGROOVABLEIND.MaxLength = 120
            Me.columnPLANTPRODUCED.MaxLength = 200
            Me.columnIMARK.MaxLength = 120
            Me.columnINFORMENUMBER.MaxLength = 50
            Me.columnTREADPATTERN.MaxLength = 50
            Me.columnSPECIALPROTECTIVEBAND.MaxLength = 50
            Me.columnNOMINALTIREWIDTH.MaxLength = 50
            Me.columnASPECTRADIO.MaxLength = 50
            Me.columnTREADWEARINDICATORS.MaxLength = 50
            Me.columnNAMEOFMANUFACTURER.MaxLength = 100
            Me.columnFAMILY.MaxLength = 50
            Me.columnDOTSERIALNUMBER.MaxLength = 15
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnSUPPLEMENTALEXTENSION_EN.MaxLength = 30
            Me.columnEXTENSION_EN.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPRODUCTDATA_REPORT_VIEWRow() As PRODUCTDATA_REPORT_VIEWRow
            Return CType(Me.NewRow,PRODUCTDATA_REPORT_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRODUCTDATA_REPORT_VIEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRODUCTDATA_REPORT_VIEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowChangedEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowChanged(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowChangingEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowChanging(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowDeleted(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRODUCTDATA_REPORT_VIEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRODUCTDATA_REPORT_VIEWRowDeleting(Me, New PRODUCTDATA_REPORT_VIEWRowChangeEvent(CType(e.Row,PRODUCTDATA_REPORT_VIEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePRODUCTDATA_REPORT_VIEWRow(ByVal row As PRODUCTDATA_REPORT_VIEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRODUCTDATA_REPORT_VIEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BEADUNSEATHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnBEADUNSEATID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnLOWESTUNSEATVALUE As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnMINBEADUNSEAT As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnTESTPASSFAIL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BEADUNSEATHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEADUNSEATIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEADUNSEATID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOWESTUNSEATVALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOWESTUNSEATVALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MINBEADUNSEATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINBEADUNSEAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BEADUNSEATHDRRow
            Get
                Return CType(Me.Rows(index),BEADUNSEATHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATHDRRowChanging As BEADUNSEATHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATHDRRowChanged As BEADUNSEATHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATHDRRowDeleting As BEADUNSEATHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATHDRRowDeleted As BEADUNSEATHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBEADUNSEATHDRRow(ByVal row As BEADUNSEATHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBEADUNSEATHDRRow( _
                    ByVal BEADUNSEATID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal LOWESTUNSEATVALUE As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal MINBEADUNSEAT As Decimal,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal TESTPASSFAIL As String) As BEADUNSEATHDRRow
            Dim rowBEADUNSEATHDRRow As BEADUNSEATHDRRow = CType(Me.NewRow,BEADUNSEATHDRRow)
            Dim columnValuesArray() As Object = New Object() {BEADUNSEATID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIALNUMBER, LOWESTUNSEATVALUE, PASSYN, CERTIFICATIONTYPEID, CERTIFICATENUMBER, SERIALDATE, MINBEADUNSEAT, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, TESTPASSFAIL}
            rowBEADUNSEATHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBEADUNSEATHDRRow)
            Return rowBEADUNSEATHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByBEADUNSEATID(ByVal BEADUNSEATID As Decimal) As BEADUNSEATHDRRow
            Return CType(Me.Rows.Find(New Object() {BEADUNSEATID}),BEADUNSEATHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BEADUNSEATHDRDataTable = CType(MyBase.Clone,BEADUNSEATHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BEADUNSEATHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBEADUNSEATID = MyBase.Columns("BEADUNSEATID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnLOWESTUNSEATVALUE = MyBase.Columns("LOWESTUNSEATVALUE")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnMINBEADUNSEAT = MyBase.Columns("MINBEADUNSEAT")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnTESTPASSFAIL = MyBase.Columns("TESTPASSFAIL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBEADUNSEATID = New Global.System.Data.DataColumn("BEADUNSEATID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEADUNSEATID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnLOWESTUNSEATVALUE = New Global.System.Data.DataColumn("LOWESTUNSEATVALUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOWESTUNSEATVALUE)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSYN)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnMINBEADUNSEAT = New Global.System.Data.DataColumn("MINBEADUNSEAT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINBEADUNSEAT)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnTESTPASSFAIL = New Global.System.Data.DataColumn("TESTPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTPASSFAIL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBEADUNSEATID}, true))
            Me.columnBEADUNSEATID.AllowDBNull = false
            Me.columnBEADUNSEATID.Unique = true
            Me.columnPROJECTNUMBER.MaxLength = 40
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnPASSYN.MaxLength = 4
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
            Me.columnTESTPASSFAIL.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBEADUNSEATHDRRow() As BEADUNSEATHDRRow
            Return CType(Me.NewRow,BEADUNSEATHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BEADUNSEATHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BEADUNSEATHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BEADUNSEATHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATHDRRowChanged(Me, New BEADUNSEATHDRRowChangeEvent(CType(e.Row,BEADUNSEATHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BEADUNSEATHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATHDRRowChanging(Me, New BEADUNSEATHDRRowChangeEvent(CType(e.Row,BEADUNSEATHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BEADUNSEATHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATHDRRowDeleted(Me, New BEADUNSEATHDRRowChangeEvent(CType(e.Row,BEADUNSEATHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BEADUNSEATHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATHDRRowDeleting(Me, New BEADUNSEATHDRRowChangeEvent(CType(e.Row,BEADUNSEATHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBEADUNSEATHDRRow(ByVal row As BEADUNSEATHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BEADUNSEATHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BEADUNSEATDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnBEADUNSEATID As Global.System.Data.DataColumn
        
        Private columnUNSEATFORCE As Global.System.Data.DataColumn
        
        Private columnITERATION As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BEADUNSEATDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEADUNSEATIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEADUNSEATID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNSEATFORCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNSEATFORCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITERATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITERATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BEADUNSEATDTLRow
            Get
                Return CType(Me.Rows(index),BEADUNSEATDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATDTLRowChanging As BEADUNSEATDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATDTLRowChanged As BEADUNSEATDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATDTLRowDeleting As BEADUNSEATDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BEADUNSEATDTLRowDeleted As BEADUNSEATDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBEADUNSEATDTLRow(ByVal row As BEADUNSEATDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBEADUNSEATDTLRow(ByVal parentBEADUNSEATHDRRowByBEADUNSEATHDR_BEADUNSEATDTL As BEADUNSEATHDRRow, ByVal UNSEATFORCE As Decimal, ByVal ITERATION As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As BEADUNSEATDTLRow
            Dim rowBEADUNSEATDTLRow As BEADUNSEATDTLRow = CType(Me.NewRow,BEADUNSEATDTLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, UNSEATFORCE, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentBEADUNSEATHDRRowByBEADUNSEATHDR_BEADUNSEATDTL) Is Nothing) Then
                columnValuesArray(0) = parentBEADUNSEATHDRRowByBEADUNSEATHDR_BEADUNSEATDTL(0)
            End If
            rowBEADUNSEATDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBEADUNSEATDTLRow)
            Return rowBEADUNSEATDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BEADUNSEATDTLDataTable = CType(MyBase.Clone,BEADUNSEATDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BEADUNSEATDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBEADUNSEATID = MyBase.Columns("BEADUNSEATID")
            Me.columnUNSEATFORCE = MyBase.Columns("UNSEATFORCE")
            Me.columnITERATION = MyBase.Columns("ITERATION")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBEADUNSEATID = New Global.System.Data.DataColumn("BEADUNSEATID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEADUNSEATID)
            Me.columnUNSEATFORCE = New Global.System.Data.DataColumn("UNSEATFORCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNSEATFORCE)
            Me.columnITERATION = New Global.System.Data.DataColumn("ITERATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITERATION)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnBEADUNSEATID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBEADUNSEATDTLRow() As BEADUNSEATDTLRow
            Return CType(Me.NewRow,BEADUNSEATDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BEADUNSEATDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BEADUNSEATDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BEADUNSEATDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATDTLRowChanged(Me, New BEADUNSEATDTLRowChangeEvent(CType(e.Row,BEADUNSEATDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BEADUNSEATDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATDTLRowChanging(Me, New BEADUNSEATDTLRowChangeEvent(CType(e.Row,BEADUNSEATDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BEADUNSEATDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATDTLRowDeleted(Me, New BEADUNSEATDTLRowChangeEvent(CType(e.Row,BEADUNSEATDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BEADUNSEATDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent BEADUNSEATDTLRowDeleting(Me, New BEADUNSEATDTLRowChangeEvent(CType(e.Row,BEADUNSEATDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBEADUNSEATDTLRow(ByVal row As BEADUNSEATDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BEADUNSEATDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ENDURANCEDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTESTSTEP As Global.System.Data.DataColumn
        
        Private columnTIMEINMIN As Global.System.Data.DataColumn
        
        Private columnSPEED As Global.System.Data.DataColumn
        
        Private columnTOTMILES As Global.System.Data.DataColumn
        
        Private columnLOAD As Global.System.Data.DataColumn
        
        Private columnLOADPERCENT As Global.System.Data.DataColumn
        
        Private columnSETINFLATION As Global.System.Data.DataColumn
        
        Private columnAMBTEMP As Global.System.Data.DataColumn
        
        Private columnINFPRESSURE As Global.System.Data.DataColumn
        
        Private columnSTEPCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnENDURANCEID As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ENDURANCEDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSTEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSTEP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIMEINMINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMEINMIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTMILESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTMILES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADPERCENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOADPERCENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SETINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSETINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMBTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMBTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STEPCOMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTEPCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDURANCEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDURANCEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ENDURANCEDTLRow
            Get
                Return CType(Me.Rows(index),ENDURANCEDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEDTLRowChanging As ENDURANCEDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEDTLRowChanged As ENDURANCEDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEDTLRowDeleting As ENDURANCEDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEDTLRowDeleted As ENDURANCEDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddENDURANCEDTLRow(ByVal row As ENDURANCEDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddENDURANCEDTLRow(ByVal TESTSTEP As Decimal, ByVal TIMEINMIN As Decimal, ByVal SPEED As Decimal, ByVal TOTMILES As Decimal, ByVal LOAD As Decimal, ByVal LOADPERCENT As Decimal, ByVal SETINFLATION As Decimal, ByVal AMBTEMP As Decimal, ByVal INFPRESSURE As Decimal, ByVal STEPCOMPLETIONDATE As Date, ByVal parentENDURANCEHDRRowByENDURANCEHDR_ENDURANCEDTL As ENDURANCEHDRRow, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As ENDURANCEDTLRow
            Dim rowENDURANCEDTLRow As ENDURANCEDTLRow = CType(Me.NewRow,ENDURANCEDTLRow)
            Dim columnValuesArray() As Object = New Object() {TESTSTEP, TIMEINMIN, SPEED, TOTMILES, LOAD, LOADPERCENT, SETINFLATION, AMBTEMP, INFPRESSURE, STEPCOMPLETIONDATE, Nothing, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentENDURANCEHDRRowByENDURANCEHDR_ENDURANCEDTL) Is Nothing) Then
                columnValuesArray(10) = parentENDURANCEHDRRowByENDURANCEHDR_ENDURANCEDTL(0)
            End If
            rowENDURANCEDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowENDURANCEDTLRow)
            Return rowENDURANCEDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ENDURANCEDTLDataTable = CType(MyBase.Clone,ENDURANCEDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ENDURANCEDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTESTSTEP = MyBase.Columns("TESTSTEP")
            Me.columnTIMEINMIN = MyBase.Columns("TIMEINMIN")
            Me.columnSPEED = MyBase.Columns("SPEED")
            Me.columnTOTMILES = MyBase.Columns("TOTMILES")
            Me.columnLOAD = MyBase.Columns("LOAD")
            Me.columnLOADPERCENT = MyBase.Columns("LOADPERCENT")
            Me.columnSETINFLATION = MyBase.Columns("SETINFLATION")
            Me.columnAMBTEMP = MyBase.Columns("AMBTEMP")
            Me.columnINFPRESSURE = MyBase.Columns("INFPRESSURE")
            Me.columnSTEPCOMPLETIONDATE = MyBase.Columns("STEPCOMPLETIONDATE")
            Me.columnENDURANCEID = MyBase.Columns("ENDURANCEID")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTESTSTEP = New Global.System.Data.DataColumn("TESTSTEP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSTEP)
            Me.columnTIMEINMIN = New Global.System.Data.DataColumn("TIMEINMIN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMEINMIN)
            Me.columnSPEED = New Global.System.Data.DataColumn("SPEED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEED)
            Me.columnTOTMILES = New Global.System.Data.DataColumn("TOTMILES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTMILES)
            Me.columnLOAD = New Global.System.Data.DataColumn("LOAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOAD)
            Me.columnLOADPERCENT = New Global.System.Data.DataColumn("LOADPERCENT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOADPERCENT)
            Me.columnSETINFLATION = New Global.System.Data.DataColumn("SETINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSETINFLATION)
            Me.columnAMBTEMP = New Global.System.Data.DataColumn("AMBTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMBTEMP)
            Me.columnINFPRESSURE = New Global.System.Data.DataColumn("INFPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFPRESSURE)
            Me.columnSTEPCOMPLETIONDATE = New Global.System.Data.DataColumn("STEPCOMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTEPCOMPLETIONDATE)
            Me.columnENDURANCEID = New Global.System.Data.DataColumn("ENDURANCEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDURANCEID)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnENDURANCEID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewENDURANCEDTLRow() As ENDURANCEDTLRow
            Return CType(Me.NewRow,ENDURANCEDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ENDURANCEDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ENDURANCEDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ENDURANCEDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent ENDURANCEDTLRowChanged(Me, New ENDURANCEDTLRowChangeEvent(CType(e.Row,ENDURANCEDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ENDURANCEDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent ENDURANCEDTLRowChanging(Me, New ENDURANCEDTLRowChangeEvent(CType(e.Row,ENDURANCEDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ENDURANCEDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent ENDURANCEDTLRowDeleted(Me, New ENDURANCEDTLRowChangeEvent(CType(e.Row,ENDURANCEDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ENDURANCEDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent ENDURANCEDTLRowDeleting(Me, New ENDURANCEDTLRowChangeEvent(CType(e.Row,ENDURANCEDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveENDURANCEDTLRow(ByVal row As ENDURANCEDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ENDURANCEDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ENDURANCEHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnENDURANCEID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnMFGWWYY As Global.System.Data.DataColumn
        
        Private columnPRECONDSTARTDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDSTARTTEMP As Global.System.Data.DataColumn
        
        Private columnRIMDIAMETER As Global.System.Data.DataColumn
        
        Private columnRIMWIDTH As Global.System.Data.DataColumn
        
        Private columnPRECONDENDDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDENDTEMP As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnBEFOREDIAMETER As Global.System.Data.DataColumn
        
        Private columnAFTERDIAMETER As Global.System.Data.DataColumn
        
        Private columnBEFOREINFLATION As Global.System.Data.DataColumn
        
        Private columnAFTERINFLATION As Global.System.Data.DataColumn
        
        Private columnWHEELPOSITION As Global.System.Data.DataColumn
        
        Private columnWHEELNUMBER As Global.System.Data.DataColumn
        
        Private columnFINALTEMP As Global.System.Data.DataColumn
        
        Private columnFINALDISTANCE As Global.System.Data.DataColumn
        
        Private columnFINALINFLATION As Global.System.Data.DataColumn
        
        Private columnPOSTCONDSTARTDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDENDDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDENDTEMP As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDTIME As Global.System.Data.DataColumn
        
        Private columnPOSTCONDTIME As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnDIAMETERTESTDRUM As Global.System.Data.DataColumn
        
        Private columnPRECONDTEMP As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSUREREADJUSTED As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEBEFORETEST As Global.System.Data.DataColumn
        
        Private columnRESULTPASSFAIL As Global.System.Data.DataColumn
        
        Private columnENDURANCEHOURS As Global.System.Data.DataColumn
        
        Private columnPOSSIBLEFAILURESFOUND As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEAFTERTEST As Global.System.Data.DataColumn
        
        Private columnOUTERDIAMETERDIFERENCE As Global.System.Data.DataColumn
        
        Private columnODDIFERENCETOLERANCE As Global.System.Data.DataColumn
        
        Private columnSERIENOM As Global.System.Data.DataColumn
        
        Private columnFINALJUDGEMENT As Global.System.Data.DataColumn
        
        Private columnAPPROVER As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ENDURANCEHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDURANCEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDURANCEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MFGWWYYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMFGWWYY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDSTARTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDSTARTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDSTARTTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDSTARTTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDENDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDENDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDENDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDENDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEFOREDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEFOREDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTERDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTERDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEFOREINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEFOREINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTERINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTERINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALDISTANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALDISTANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDSTARTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDSTARTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDENDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDENDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDENDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDENDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERTESTDRUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERTESTDRUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREREADJUSTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSUREREADJUSTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEBEFORETESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEBEFORETEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESULTPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESULTPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDURANCEHOURSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDURANCEHOURS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSSIBLEFAILURESFOUNDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSSIBLEFAILURESFOUND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEAFTERTESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEAFTERTEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OUTERDIAMETERDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOUTERDIAMETERDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODDIFERENCETOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDIFERENCETOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIENOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIENOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALJUDGEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALJUDGEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ENDURANCEHDRRow
            Get
                Return CType(Me.Rows(index),ENDURANCEHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEHDRRowChanging As ENDURANCEHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEHDRRowChanged As ENDURANCEHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEHDRRowDeleting As ENDURANCEHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENDURANCEHDRRowDeleted As ENDURANCEHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddENDURANCEHDRRow(ByVal row As ENDURANCEHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddENDURANCEHDRRow( _
                    ByVal ENDURANCEID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal MFGWWYY As String,  _
                    ByVal PRECONDSTARTDATE As Date,  _
                    ByVal PRECONDSTARTTEMP As Decimal,  _
                    ByVal RIMDIAMETER As Decimal,  _
                    ByVal RIMWIDTH As Decimal,  _
                    ByVal PRECONDENDDATE As Date,  _
                    ByVal PRECONDENDTEMP As Decimal,  _
                    ByVal INFLATIONPRESSURE As Decimal,  _
                    ByVal BEFOREDIAMETER As Decimal,  _
                    ByVal AFTERDIAMETER As Decimal,  _
                    ByVal BEFOREINFLATION As Decimal,  _
                    ByVal AFTERINFLATION As Decimal,  _
                    ByVal WHEELPOSITION As Decimal,  _
                    ByVal WHEELNUMBER As Decimal,  _
                    ByVal FINALTEMP As Decimal,  _
                    ByVal FINALDISTANCE As Decimal,  _
                    ByVal FINALINFLATION As Decimal,  _
                    ByVal POSTCONDSTARTDATE As Date,  _
                    ByVal POSTCONDENDDATE As Date,  _
                    ByVal POSTCONDENDTEMP As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal PRECONDTIME As Decimal,  _
                    ByVal POSTCONDTIME As Decimal,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal DIAMETERTESTDRUM As Decimal,  _
                    ByVal PRECONDTEMP As Decimal,  _
                    ByVal INFLATIONPRESSUREREADJUSTED As Decimal,  _
                    ByVal CIRCUNFERENCEBEFORETEST As Decimal,  _
                    ByVal RESULTPASSFAIL As String,  _
                    ByVal ENDURANCEHOURS As Decimal,  _
                    ByVal POSSIBLEFAILURESFOUND As String,  _
                    ByVal CIRCUNFERENCEAFTERTEST As Decimal,  _
                    ByVal OUTERDIAMETERDIFERENCE As Decimal,  _
                    ByVal ODDIFERENCETOLERANCE As Decimal,  _
                    ByVal SERIENOM As String,  _
                    ByVal FINALJUDGEMENT As String,  _
                    ByVal APPROVER As String) As ENDURANCEHDRRow
            Dim rowENDURANCEHDRRow As ENDURANCEHDRRow = CType(Me.NewRow,ENDURANCEHDRRow)
            Dim columnValuesArray() As Object = New Object() {ENDURANCEID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIALNUMBER, MFGWWYY, PRECONDSTARTDATE, PRECONDSTARTTEMP, RIMDIAMETER, RIMWIDTH, PRECONDENDDATE, PRECONDENDTEMP, INFLATIONPRESSURE, BEFOREDIAMETER, AFTERDIAMETER, BEFOREINFLATION, AFTERINFLATION, WHEELPOSITION, WHEELNUMBER, FINALTEMP, FINALDISTANCE, FINALINFLATION, POSTCONDSTARTDATE, POSTCONDENDDATE, POSTCONDENDTEMP, PASSYN, CERTIFICATIONTYPEID, CERTIFICATENUMBER, SERIALDATE, PRECONDTIME, POSTCONDTIME, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, DIAMETERTESTDRUM, PRECONDTEMP, INFLATIONPRESSUREREADJUSTED, CIRCUNFERENCEBEFORETEST, RESULTPASSFAIL, ENDURANCEHOURS, POSSIBLEFAILURESFOUND, CIRCUNFERENCEAFTERTEST, OUTERDIAMETERDIFERENCE, ODDIFERENCETOLERANCE, SERIENOM, FINALJUDGEMENT, APPROVER}
            rowENDURANCEHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowENDURANCEHDRRow)
            Return rowENDURANCEHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENDURANCEID(ByVal ENDURANCEID As Decimal) As ENDURANCEHDRRow
            Return CType(Me.Rows.Find(New Object() {ENDURANCEID}),ENDURANCEHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ENDURANCEHDRDataTable = CType(MyBase.Clone,ENDURANCEHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ENDURANCEHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENDURANCEID = MyBase.Columns("ENDURANCEID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnMFGWWYY = MyBase.Columns("MFGWWYY")
            Me.columnPRECONDSTARTDATE = MyBase.Columns("PRECONDSTARTDATE")
            Me.columnPRECONDSTARTTEMP = MyBase.Columns("PRECONDSTARTTEMP")
            Me.columnRIMDIAMETER = MyBase.Columns("RIMDIAMETER")
            Me.columnRIMWIDTH = MyBase.Columns("RIMWIDTH")
            Me.columnPRECONDENDDATE = MyBase.Columns("PRECONDENDDATE")
            Me.columnPRECONDENDTEMP = MyBase.Columns("PRECONDENDTEMP")
            Me.columnINFLATIONPRESSURE = MyBase.Columns("INFLATIONPRESSURE")
            Me.columnBEFOREDIAMETER = MyBase.Columns("BEFOREDIAMETER")
            Me.columnAFTERDIAMETER = MyBase.Columns("AFTERDIAMETER")
            Me.columnBEFOREINFLATION = MyBase.Columns("BEFOREINFLATION")
            Me.columnAFTERINFLATION = MyBase.Columns("AFTERINFLATION")
            Me.columnWHEELPOSITION = MyBase.Columns("WHEELPOSITION")
            Me.columnWHEELNUMBER = MyBase.Columns("WHEELNUMBER")
            Me.columnFINALTEMP = MyBase.Columns("FINALTEMP")
            Me.columnFINALDISTANCE = MyBase.Columns("FINALDISTANCE")
            Me.columnFINALINFLATION = MyBase.Columns("FINALINFLATION")
            Me.columnPOSTCONDSTARTDATE = MyBase.Columns("POSTCONDSTARTDATE")
            Me.columnPOSTCONDENDDATE = MyBase.Columns("POSTCONDENDDATE")
            Me.columnPOSTCONDENDTEMP = MyBase.Columns("POSTCONDENDTEMP")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnPRECONDTIME = MyBase.Columns("PRECONDTIME")
            Me.columnPOSTCONDTIME = MyBase.Columns("POSTCONDTIME")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnDIAMETERTESTDRUM = MyBase.Columns("DIAMETERTESTDRUM")
            Me.columnPRECONDTEMP = MyBase.Columns("PRECONDTEMP")
            Me.columnINFLATIONPRESSUREREADJUSTED = MyBase.Columns("INFLATIONPRESSUREREADJUSTED")
            Me.columnCIRCUNFERENCEBEFORETEST = MyBase.Columns("CIRCUNFERENCEBEFORETEST")
            Me.columnRESULTPASSFAIL = MyBase.Columns("RESULTPASSFAIL")
            Me.columnENDURANCEHOURS = MyBase.Columns("ENDURANCEHOURS")
            Me.columnPOSSIBLEFAILURESFOUND = MyBase.Columns("POSSIBLEFAILURESFOUND")
            Me.columnCIRCUNFERENCEAFTERTEST = MyBase.Columns("CIRCUNFERENCEAFTERTEST")
            Me.columnOUTERDIAMETERDIFERENCE = MyBase.Columns("OUTERDIAMETERDIFERENCE")
            Me.columnODDIFERENCETOLERANCE = MyBase.Columns("ODDIFERENCETOLERANCE")
            Me.columnSERIENOM = MyBase.Columns("SERIENOM")
            Me.columnFINALJUDGEMENT = MyBase.Columns("FINALJUDGEMENT")
            Me.columnAPPROVER = MyBase.Columns("APPROVER")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENDURANCEID = New Global.System.Data.DataColumn("ENDURANCEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDURANCEID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnMFGWWYY = New Global.System.Data.DataColumn("MFGWWYY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMFGWWYY)
            Me.columnPRECONDSTARTDATE = New Global.System.Data.DataColumn("PRECONDSTARTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDSTARTDATE)
            Me.columnPRECONDSTARTTEMP = New Global.System.Data.DataColumn("PRECONDSTARTTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDSTARTTEMP)
            Me.columnRIMDIAMETER = New Global.System.Data.DataColumn("RIMDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMDIAMETER)
            Me.columnRIMWIDTH = New Global.System.Data.DataColumn("RIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMWIDTH)
            Me.columnPRECONDENDDATE = New Global.System.Data.DataColumn("PRECONDENDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDENDDATE)
            Me.columnPRECONDENDTEMP = New Global.System.Data.DataColumn("PRECONDENDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDENDTEMP)
            Me.columnINFLATIONPRESSURE = New Global.System.Data.DataColumn("INFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSURE)
            Me.columnBEFOREDIAMETER = New Global.System.Data.DataColumn("BEFOREDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEFOREDIAMETER)
            Me.columnAFTERDIAMETER = New Global.System.Data.DataColumn("AFTERDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTERDIAMETER)
            Me.columnBEFOREINFLATION = New Global.System.Data.DataColumn("BEFOREINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEFOREINFLATION)
            Me.columnAFTERINFLATION = New Global.System.Data.DataColumn("AFTERINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTERINFLATION)
            Me.columnWHEELPOSITION = New Global.System.Data.DataColumn("WHEELPOSITION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELPOSITION)
            Me.columnWHEELNUMBER = New Global.System.Data.DataColumn("WHEELNUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELNUMBER)
            Me.columnFINALTEMP = New Global.System.Data.DataColumn("FINALTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALTEMP)
            Me.columnFINALDISTANCE = New Global.System.Data.DataColumn("FINALDISTANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALDISTANCE)
            Me.columnFINALINFLATION = New Global.System.Data.DataColumn("FINALINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALINFLATION)
            Me.columnPOSTCONDSTARTDATE = New Global.System.Data.DataColumn("POSTCONDSTARTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDSTARTDATE)
            Me.columnPOSTCONDENDDATE = New Global.System.Data.DataColumn("POSTCONDENDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDENDDATE)
            Me.columnPOSTCONDENDTEMP = New Global.System.Data.DataColumn("POSTCONDENDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDENDTEMP)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSYN)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnPRECONDTIME = New Global.System.Data.DataColumn("PRECONDTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDTIME)
            Me.columnPOSTCONDTIME = New Global.System.Data.DataColumn("POSTCONDTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDTIME)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnDIAMETERTESTDRUM = New Global.System.Data.DataColumn("DIAMETERTESTDRUM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERTESTDRUM)
            Me.columnPRECONDTEMP = New Global.System.Data.DataColumn("PRECONDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDTEMP)
            Me.columnINFLATIONPRESSUREREADJUSTED = New Global.System.Data.DataColumn("INFLATIONPRESSUREREADJUSTED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSUREREADJUSTED)
            Me.columnCIRCUNFERENCEBEFORETEST = New Global.System.Data.DataColumn("CIRCUNFERENCEBEFORETEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEBEFORETEST)
            Me.columnRESULTPASSFAIL = New Global.System.Data.DataColumn("RESULTPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESULTPASSFAIL)
            Me.columnENDURANCEHOURS = New Global.System.Data.DataColumn("ENDURANCEHOURS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDURANCEHOURS)
            Me.columnPOSSIBLEFAILURESFOUND = New Global.System.Data.DataColumn("POSSIBLEFAILURESFOUND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSSIBLEFAILURESFOUND)
            Me.columnCIRCUNFERENCEAFTERTEST = New Global.System.Data.DataColumn("CIRCUNFERENCEAFTERTEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEAFTERTEST)
            Me.columnOUTERDIAMETERDIFERENCE = New Global.System.Data.DataColumn("OUTERDIAMETERDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOUTERDIAMETERDIFERENCE)
            Me.columnODDIFERENCETOLERANCE = New Global.System.Data.DataColumn("ODDIFERENCETOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDIFERENCETOLERANCE)
            Me.columnSERIENOM = New Global.System.Data.DataColumn("SERIENOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIENOM)
            Me.columnFINALJUDGEMENT = New Global.System.Data.DataColumn("FINALJUDGEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALJUDGEMENT)
            Me.columnAPPROVER = New Global.System.Data.DataColumn("APPROVER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVER)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENDURANCEID}, true))
            Me.columnENDURANCEID.AllowDBNull = false
            Me.columnENDURANCEID.Unique = true
            Me.columnPROJECTNUMBER.MaxLength = 10
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnMFGWWYY.MaxLength = 80
            Me.columnPASSYN.MaxLength = 1
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
            Me.columnRESULTPASSFAIL.MaxLength = 1
            Me.columnPOSSIBLEFAILURESFOUND.MaxLength = 10
            Me.columnSERIENOM.MaxLength = 50
            Me.columnFINALJUDGEMENT.MaxLength = 1
            Me.columnAPPROVER.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewENDURANCEHDRRow() As ENDURANCEHDRRow
            Return CType(Me.NewRow,ENDURANCEHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ENDURANCEHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ENDURANCEHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ENDURANCEHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent ENDURANCEHDRRowChanged(Me, New ENDURANCEHDRRowChangeEvent(CType(e.Row,ENDURANCEHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ENDURANCEHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent ENDURANCEHDRRowChanging(Me, New ENDURANCEHDRRowChangeEvent(CType(e.Row,ENDURANCEHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ENDURANCEHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent ENDURANCEHDRRowDeleted(Me, New ENDURANCEHDRRowChangeEvent(CType(e.Row,ENDURANCEHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ENDURANCEHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent ENDURANCEHDRRowDeleting(Me, New ENDURANCEHDRRowChangeEvent(CType(e.Row,ENDURANCEHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveENDURANCEHDRRow(ByVal row As ENDURANCEHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ENDURANCEHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HIGHSPEEDDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTESTSTEP As Global.System.Data.DataColumn
        
        Private columnTIMEINMIN As Global.System.Data.DataColumn
        
        Private columnSPEED As Global.System.Data.DataColumn
        
        Private columnTOTMILES As Global.System.Data.DataColumn
        
        Private columnLOAD As Global.System.Data.DataColumn
        
        Private columnLOADPERCENT As Global.System.Data.DataColumn
        
        Private columnSETINFLATION As Global.System.Data.DataColumn
        
        Private columnAMBTEMP As Global.System.Data.DataColumn
        
        Private columnINFPRESSURE As Global.System.Data.DataColumn
        
        Private columnSTEPCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnHIGHSPEEDID As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HIGHSPEEDDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSTEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSTEP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIMEINMINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMEINMIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTMILESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTMILES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOADPERCENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOADPERCENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SETINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSETINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMBTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMBTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STEPCOMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTEPCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HIGHSPEEDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHIGHSPEEDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HIGHSPEEDDTLRow
            Get
                Return CType(Me.Rows(index),HIGHSPEEDDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDDTLRowChanging As HIGHSPEEDDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDDTLRowChanged As HIGHSPEEDDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDDTLRowDeleting As HIGHSPEEDDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDDTLRowDeleted As HIGHSPEEDDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHIGHSPEEDDTLRow(ByVal row As HIGHSPEEDDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHIGHSPEEDDTLRow(ByVal TESTSTEP As Decimal, ByVal TIMEINMIN As Decimal, ByVal SPEED As Decimal, ByVal TOTMILES As Decimal, ByVal LOAD As Decimal, ByVal LOADPERCENT As Decimal, ByVal SETINFLATION As Decimal, ByVal AMBTEMP As Decimal, ByVal INFPRESSURE As Decimal, ByVal STEPCOMPLETIONDATE As Date, ByVal parentHIGHSPEEDHDRRowByHIGHSPEEDHDR_HIGHSPEEDDTL As HIGHSPEEDHDRRow, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As HIGHSPEEDDTLRow
            Dim rowHIGHSPEEDDTLRow As HIGHSPEEDDTLRow = CType(Me.NewRow,HIGHSPEEDDTLRow)
            Dim columnValuesArray() As Object = New Object() {TESTSTEP, TIMEINMIN, SPEED, TOTMILES, LOAD, LOADPERCENT, SETINFLATION, AMBTEMP, INFPRESSURE, STEPCOMPLETIONDATE, Nothing, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentHIGHSPEEDHDRRowByHIGHSPEEDHDR_HIGHSPEEDDTL) Is Nothing) Then
                columnValuesArray(10) = parentHIGHSPEEDHDRRowByHIGHSPEEDHDR_HIGHSPEEDDTL(0)
            End If
            rowHIGHSPEEDDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHIGHSPEEDDTLRow)
            Return rowHIGHSPEEDDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HIGHSPEEDDTLDataTable = CType(MyBase.Clone,HIGHSPEEDDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HIGHSPEEDDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTESTSTEP = MyBase.Columns("TESTSTEP")
            Me.columnTIMEINMIN = MyBase.Columns("TIMEINMIN")
            Me.columnSPEED = MyBase.Columns("SPEED")
            Me.columnTOTMILES = MyBase.Columns("TOTMILES")
            Me.columnLOAD = MyBase.Columns("LOAD")
            Me.columnLOADPERCENT = MyBase.Columns("LOADPERCENT")
            Me.columnSETINFLATION = MyBase.Columns("SETINFLATION")
            Me.columnAMBTEMP = MyBase.Columns("AMBTEMP")
            Me.columnINFPRESSURE = MyBase.Columns("INFPRESSURE")
            Me.columnSTEPCOMPLETIONDATE = MyBase.Columns("STEPCOMPLETIONDATE")
            Me.columnHIGHSPEEDID = MyBase.Columns("HIGHSPEEDID")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTESTSTEP = New Global.System.Data.DataColumn("TESTSTEP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSTEP)
            Me.columnTIMEINMIN = New Global.System.Data.DataColumn("TIMEINMIN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMEINMIN)
            Me.columnSPEED = New Global.System.Data.DataColumn("SPEED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEED)
            Me.columnTOTMILES = New Global.System.Data.DataColumn("TOTMILES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTMILES)
            Me.columnLOAD = New Global.System.Data.DataColumn("LOAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOAD)
            Me.columnLOADPERCENT = New Global.System.Data.DataColumn("LOADPERCENT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOADPERCENT)
            Me.columnSETINFLATION = New Global.System.Data.DataColumn("SETINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSETINFLATION)
            Me.columnAMBTEMP = New Global.System.Data.DataColumn("AMBTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMBTEMP)
            Me.columnINFPRESSURE = New Global.System.Data.DataColumn("INFPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFPRESSURE)
            Me.columnSTEPCOMPLETIONDATE = New Global.System.Data.DataColumn("STEPCOMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTEPCOMPLETIONDATE)
            Me.columnHIGHSPEEDID = New Global.System.Data.DataColumn("HIGHSPEEDID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHIGHSPEEDID)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnHIGHSPEEDID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHIGHSPEEDDTLRow() As HIGHSPEEDDTLRow
            Return CType(Me.NewRow,HIGHSPEEDDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HIGHSPEEDDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HIGHSPEEDDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HIGHSPEEDDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDDTLRowChanged(Me, New HIGHSPEEDDTLRowChangeEvent(CType(e.Row,HIGHSPEEDDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HIGHSPEEDDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDDTLRowChanging(Me, New HIGHSPEEDDTLRowChangeEvent(CType(e.Row,HIGHSPEEDDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HIGHSPEEDDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDDTLRowDeleted(Me, New HIGHSPEEDDTLRowChangeEvent(CType(e.Row,HIGHSPEEDDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HIGHSPEEDDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDDTLRowDeleting(Me, New HIGHSPEEDDTLRowChangeEvent(CType(e.Row,HIGHSPEEDDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHIGHSPEEDDTLRow(ByVal row As HIGHSPEEDDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HIGHSPEEDDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HIGHSPEEDHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnHIGHSPEEDID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUM As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnMFGWWYY As Global.System.Data.DataColumn
        
        Private columnPRECONDSTARTDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDSARTTEMP As Global.System.Data.DataColumn
        
        Private columnRIMDIAMETER As Global.System.Data.DataColumn
        
        Private columnRIMWIDTH As Global.System.Data.DataColumn
        
        Private columnPRECONDENDDATE As Global.System.Data.DataColumn
        
        Private columnPRECONDENDTEMP As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnBEFOREDIAMETER As Global.System.Data.DataColumn
        
        Private columnAFTERDIAMETER As Global.System.Data.DataColumn
        
        Private columnBEFOREINFLATION As Global.System.Data.DataColumn
        
        Private columnAFTERINFLATION As Global.System.Data.DataColumn
        
        Private columnWHEELPOSITION As Global.System.Data.DataColumn
        
        Private columnWHEELNUMBER As Global.System.Data.DataColumn
        
        Private columnFINALTEMP As Global.System.Data.DataColumn
        
        Private columnFINALDISTANCE As Global.System.Data.DataColumn
        
        Private columnFINALINFLATION As Global.System.Data.DataColumn
        
        Private columnPOSTCONDSTARTDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDENDDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDENDTEMP As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnPOSTCONDTIME As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnDIAMETERTESTDRUM As Global.System.Data.DataColumn
        
        Private columnPRECONDTIME As Global.System.Data.DataColumn
        
        Private columnPRECONDTEMP As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSUREREADJUSTED As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEBEFORETEST As Global.System.Data.DataColumn
        
        Private columnWHEELSPEEDRPM As Global.System.Data.DataColumn
        
        Private columnWHEELSPEEDKMH As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCEAFTERTEST As Global.System.Data.DataColumn
        
        Private columnODDIFERENCE As Global.System.Data.DataColumn
        
        Private columnODDIFERENCETOLERANCE As Global.System.Data.DataColumn
        
        Private columnSERIENOM As Global.System.Data.DataColumn
        
        Private columnFINALJUDGEMENT As Global.System.Data.DataColumn
        
        Private columnAPPROVER As Global.System.Data.DataColumn
        
        Private columnPASSATKMH As Global.System.Data.DataColumn
        
        Private columnSPEEDTTESTPASSFAIL As Global.System.Data.DataColumn
        
        Private columnSPEEDTOTALTIME As Global.System.Data.DataColumn
        
        Private columnMAXSPEED As Global.System.Data.DataColumn
        
        Private columnMAXLOAD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HIGHSPEEDHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HIGHSPEEDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHIGHSPEEDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MFGWWYYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMFGWWYY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDSTARTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDSTARTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDSARTTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDSARTTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDENDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDENDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDENDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDENDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEFOREDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEFOREDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTERDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTERDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEFOREINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEFOREINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AFTERINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFTERINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELPOSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELPOSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALDISTANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALDISTANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALINFLATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALINFLATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDSTARTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDSTARTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDENDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDENDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDENDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDENDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSTCONDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSTCONDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERTESTDRUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERTESTDRUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECONDTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECONDTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREREADJUSTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSUREREADJUSTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEBEFORETESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEBEFORETEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELSPEEDRPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELSPEEDRPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WHEELSPEEDKMHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWHEELSPEEDKMH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEAFTERTESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCEAFTERTEST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODDIFERENCETOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDIFERENCETOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIENOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIENOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FINALJUDGEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINALJUDGEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APPROVERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPROVER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSATKMHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSATKMH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDTTESTPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDTTESTPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEEDTOTALTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEEDTOTALTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXSPEEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXSPEED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXLOADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXLOAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HIGHSPEEDHDRRow
            Get
                Return CType(Me.Rows(index),HIGHSPEEDHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDHDRRowChanging As HIGHSPEEDHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDHDRRowChanged As HIGHSPEEDHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDHDRRowDeleting As HIGHSPEEDHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HIGHSPEEDHDRRowDeleted As HIGHSPEEDHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHIGHSPEEDHDRRow(ByVal row As HIGHSPEEDHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHIGHSPEEDHDRRow( _
                    ByVal HIGHSPEEDID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUM As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal MFGWWYY As String,  _
                    ByVal PRECONDSTARTDATE As Date,  _
                    ByVal PRECONDSARTTEMP As Decimal,  _
                    ByVal RIMDIAMETER As Decimal,  _
                    ByVal RIMWIDTH As Decimal,  _
                    ByVal PRECONDENDDATE As Date,  _
                    ByVal PRECONDENDTEMP As Decimal,  _
                    ByVal INFLATIONPRESSURE As Decimal,  _
                    ByVal BEFOREDIAMETER As Decimal,  _
                    ByVal AFTERDIAMETER As Decimal,  _
                    ByVal BEFOREINFLATION As Decimal,  _
                    ByVal AFTERINFLATION As Decimal,  _
                    ByVal WHEELPOSITION As Decimal,  _
                    ByVal WHEELNUMBER As Decimal,  _
                    ByVal FINALTEMP As Decimal,  _
                    ByVal FINALDISTANCE As Decimal,  _
                    ByVal FINALINFLATION As Decimal,  _
                    ByVal POSTCONDSTARTDATE As Date,  _
                    ByVal POSTCONDENDDATE As Date,  _
                    ByVal POSTCONDENDTEMP As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal POSTCONDTIME As Decimal,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal DIAMETERTESTDRUM As Decimal,  _
                    ByVal PRECONDTIME As Decimal,  _
                    ByVal PRECONDTEMP As Decimal,  _
                    ByVal INFLATIONPRESSUREREADJUSTED As Decimal,  _
                    ByVal CIRCUNFERENCEBEFORETEST As Decimal,  _
                    ByVal WHEELSPEEDRPM As Decimal,  _
                    ByVal WHEELSPEEDKMH As Decimal,  _
                    ByVal CIRCUNFERENCEAFTERTEST As Decimal,  _
                    ByVal ODDIFERENCE As Decimal,  _
                    ByVal ODDIFERENCETOLERANCE As Decimal,  _
                    ByVal SERIENOM As String,  _
                    ByVal FINALJUDGEMENT As String,  _
                    ByVal APPROVER As String,  _
                    ByVal PASSATKMH As Decimal,  _
                    ByVal SPEEDTTESTPASSFAIL As String,  _
                    ByVal SPEEDTOTALTIME As Decimal,  _
                    ByVal MAXSPEED As Decimal,  _
                    ByVal MAXLOAD As Decimal) As HIGHSPEEDHDRRow
            Dim rowHIGHSPEEDHDRRow As HIGHSPEEDHDRRow = CType(Me.NewRow,HIGHSPEEDHDRRow)
            Dim columnValuesArray() As Object = New Object() {HIGHSPEEDID, PROJECTNUMBER, TIRENUM, TESTSPEC, COMPETIONDATE, DOTSERIALNUMBER, MFGWWYY, PRECONDSTARTDATE, PRECONDSARTTEMP, RIMDIAMETER, RIMWIDTH, PRECONDENDDATE, PRECONDENDTEMP, INFLATIONPRESSURE, BEFOREDIAMETER, AFTERDIAMETER, BEFOREINFLATION, AFTERINFLATION, WHEELPOSITION, WHEELNUMBER, FINALTEMP, FINALDISTANCE, FINALINFLATION, POSTCONDSTARTDATE, POSTCONDENDDATE, POSTCONDENDTEMP, PASSYN, SERIALDATE, POSTCONDTIME, CERTIFICATIONTYPEID, CERTIFICATENUMBER, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, DIAMETERTESTDRUM, PRECONDTIME, PRECONDTEMP, INFLATIONPRESSUREREADJUSTED, CIRCUNFERENCEBEFORETEST, WHEELSPEEDRPM, WHEELSPEEDKMH, CIRCUNFERENCEAFTERTEST, ODDIFERENCE, ODDIFERENCETOLERANCE, SERIENOM, FINALJUDGEMENT, APPROVER, PASSATKMH, SPEEDTTESTPASSFAIL, SPEEDTOTALTIME, MAXSPEED, MAXLOAD}
            rowHIGHSPEEDHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHIGHSPEEDHDRRow)
            Return rowHIGHSPEEDHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByHIGHSPEEDID(ByVal HIGHSPEEDID As Decimal) As HIGHSPEEDHDRRow
            Return CType(Me.Rows.Find(New Object() {HIGHSPEEDID}),HIGHSPEEDHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HIGHSPEEDHDRDataTable = CType(MyBase.Clone,HIGHSPEEDHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HIGHSPEEDHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHIGHSPEEDID = MyBase.Columns("HIGHSPEEDID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUM = MyBase.Columns("TIRENUM")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPETIONDATE = MyBase.Columns("COMPETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnMFGWWYY = MyBase.Columns("MFGWWYY")
            Me.columnPRECONDSTARTDATE = MyBase.Columns("PRECONDSTARTDATE")
            Me.columnPRECONDSARTTEMP = MyBase.Columns("PRECONDSARTTEMP")
            Me.columnRIMDIAMETER = MyBase.Columns("RIMDIAMETER")
            Me.columnRIMWIDTH = MyBase.Columns("RIMWIDTH")
            Me.columnPRECONDENDDATE = MyBase.Columns("PRECONDENDDATE")
            Me.columnPRECONDENDTEMP = MyBase.Columns("PRECONDENDTEMP")
            Me.columnINFLATIONPRESSURE = MyBase.Columns("INFLATIONPRESSURE")
            Me.columnBEFOREDIAMETER = MyBase.Columns("BEFOREDIAMETER")
            Me.columnAFTERDIAMETER = MyBase.Columns("AFTERDIAMETER")
            Me.columnBEFOREINFLATION = MyBase.Columns("BEFOREINFLATION")
            Me.columnAFTERINFLATION = MyBase.Columns("AFTERINFLATION")
            Me.columnWHEELPOSITION = MyBase.Columns("WHEELPOSITION")
            Me.columnWHEELNUMBER = MyBase.Columns("WHEELNUMBER")
            Me.columnFINALTEMP = MyBase.Columns("FINALTEMP")
            Me.columnFINALDISTANCE = MyBase.Columns("FINALDISTANCE")
            Me.columnFINALINFLATION = MyBase.Columns("FINALINFLATION")
            Me.columnPOSTCONDSTARTDATE = MyBase.Columns("POSTCONDSTARTDATE")
            Me.columnPOSTCONDENDDATE = MyBase.Columns("POSTCONDENDDATE")
            Me.columnPOSTCONDENDTEMP = MyBase.Columns("POSTCONDENDTEMP")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnPOSTCONDTIME = MyBase.Columns("POSTCONDTIME")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnDIAMETERTESTDRUM = MyBase.Columns("DIAMETERTESTDRUM")
            Me.columnPRECONDTIME = MyBase.Columns("PRECONDTIME")
            Me.columnPRECONDTEMP = MyBase.Columns("PRECONDTEMP")
            Me.columnINFLATIONPRESSUREREADJUSTED = MyBase.Columns("INFLATIONPRESSUREREADJUSTED")
            Me.columnCIRCUNFERENCEBEFORETEST = MyBase.Columns("CIRCUNFERENCEBEFORETEST")
            Me.columnWHEELSPEEDRPM = MyBase.Columns("WHEELSPEEDRPM")
            Me.columnWHEELSPEEDKMH = MyBase.Columns("WHEELSPEEDKMH")
            Me.columnCIRCUNFERENCEAFTERTEST = MyBase.Columns("CIRCUNFERENCEAFTERTEST")
            Me.columnODDIFERENCE = MyBase.Columns("ODDIFERENCE")
            Me.columnODDIFERENCETOLERANCE = MyBase.Columns("ODDIFERENCETOLERANCE")
            Me.columnSERIENOM = MyBase.Columns("SERIENOM")
            Me.columnFINALJUDGEMENT = MyBase.Columns("FINALJUDGEMENT")
            Me.columnAPPROVER = MyBase.Columns("APPROVER")
            Me.columnPASSATKMH = MyBase.Columns("PASSATKMH")
            Me.columnSPEEDTTESTPASSFAIL = MyBase.Columns("SPEEDTTESTPASSFAIL")
            Me.columnSPEEDTOTALTIME = MyBase.Columns("SPEEDTOTALTIME")
            Me.columnMAXSPEED = MyBase.Columns("MAXSPEED")
            Me.columnMAXLOAD = MyBase.Columns("MAXLOAD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHIGHSPEEDID = New Global.System.Data.DataColumn("HIGHSPEEDID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHIGHSPEEDID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUM = New Global.System.Data.DataColumn("TIRENUM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUM)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPETIONDATE = New Global.System.Data.DataColumn("COMPETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnMFGWWYY = New Global.System.Data.DataColumn("MFGWWYY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMFGWWYY)
            Me.columnPRECONDSTARTDATE = New Global.System.Data.DataColumn("PRECONDSTARTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDSTARTDATE)
            Me.columnPRECONDSARTTEMP = New Global.System.Data.DataColumn("PRECONDSARTTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDSARTTEMP)
            Me.columnRIMDIAMETER = New Global.System.Data.DataColumn("RIMDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMDIAMETER)
            Me.columnRIMWIDTH = New Global.System.Data.DataColumn("RIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMWIDTH)
            Me.columnPRECONDENDDATE = New Global.System.Data.DataColumn("PRECONDENDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDENDDATE)
            Me.columnPRECONDENDTEMP = New Global.System.Data.DataColumn("PRECONDENDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDENDTEMP)
            Me.columnINFLATIONPRESSURE = New Global.System.Data.DataColumn("INFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSURE)
            Me.columnBEFOREDIAMETER = New Global.System.Data.DataColumn("BEFOREDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEFOREDIAMETER)
            Me.columnAFTERDIAMETER = New Global.System.Data.DataColumn("AFTERDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTERDIAMETER)
            Me.columnBEFOREINFLATION = New Global.System.Data.DataColumn("BEFOREINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEFOREINFLATION)
            Me.columnAFTERINFLATION = New Global.System.Data.DataColumn("AFTERINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFTERINFLATION)
            Me.columnWHEELPOSITION = New Global.System.Data.DataColumn("WHEELPOSITION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELPOSITION)
            Me.columnWHEELNUMBER = New Global.System.Data.DataColumn("WHEELNUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELNUMBER)
            Me.columnFINALTEMP = New Global.System.Data.DataColumn("FINALTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALTEMP)
            Me.columnFINALDISTANCE = New Global.System.Data.DataColumn("FINALDISTANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALDISTANCE)
            Me.columnFINALINFLATION = New Global.System.Data.DataColumn("FINALINFLATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALINFLATION)
            Me.columnPOSTCONDSTARTDATE = New Global.System.Data.DataColumn("POSTCONDSTARTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDSTARTDATE)
            Me.columnPOSTCONDENDDATE = New Global.System.Data.DataColumn("POSTCONDENDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDENDDATE)
            Me.columnPOSTCONDENDTEMP = New Global.System.Data.DataColumn("POSTCONDENDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDENDTEMP)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSYN)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnPOSTCONDTIME = New Global.System.Data.DataColumn("POSTCONDTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSTCONDTIME)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnDIAMETERTESTDRUM = New Global.System.Data.DataColumn("DIAMETERTESTDRUM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERTESTDRUM)
            Me.columnPRECONDTIME = New Global.System.Data.DataColumn("PRECONDTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDTIME)
            Me.columnPRECONDTEMP = New Global.System.Data.DataColumn("PRECONDTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECONDTEMP)
            Me.columnINFLATIONPRESSUREREADJUSTED = New Global.System.Data.DataColumn("INFLATIONPRESSUREREADJUSTED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSUREREADJUSTED)
            Me.columnCIRCUNFERENCEBEFORETEST = New Global.System.Data.DataColumn("CIRCUNFERENCEBEFORETEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEBEFORETEST)
            Me.columnWHEELSPEEDRPM = New Global.System.Data.DataColumn("WHEELSPEEDRPM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELSPEEDRPM)
            Me.columnWHEELSPEEDKMH = New Global.System.Data.DataColumn("WHEELSPEEDKMH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWHEELSPEEDKMH)
            Me.columnCIRCUNFERENCEAFTERTEST = New Global.System.Data.DataColumn("CIRCUNFERENCEAFTERTEST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCEAFTERTEST)
            Me.columnODDIFERENCE = New Global.System.Data.DataColumn("ODDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDIFERENCE)
            Me.columnODDIFERENCETOLERANCE = New Global.System.Data.DataColumn("ODDIFERENCETOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDIFERENCETOLERANCE)
            Me.columnSERIENOM = New Global.System.Data.DataColumn("SERIENOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIENOM)
            Me.columnFINALJUDGEMENT = New Global.System.Data.DataColumn("FINALJUDGEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINALJUDGEMENT)
            Me.columnAPPROVER = New Global.System.Data.DataColumn("APPROVER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPROVER)
            Me.columnPASSATKMH = New Global.System.Data.DataColumn("PASSATKMH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSATKMH)
            Me.columnSPEEDTTESTPASSFAIL = New Global.System.Data.DataColumn("SPEEDTTESTPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDTTESTPASSFAIL)
            Me.columnSPEEDTOTALTIME = New Global.System.Data.DataColumn("SPEEDTOTALTIME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEEDTOTALTIME)
            Me.columnMAXSPEED = New Global.System.Data.DataColumn("MAXSPEED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXSPEED)
            Me.columnMAXLOAD = New Global.System.Data.DataColumn("MAXLOAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXLOAD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHIGHSPEEDID}, true))
            Me.columnHIGHSPEEDID.AllowDBNull = false
            Me.columnHIGHSPEEDID.Unique = true
            Me.columnPROJECTNUMBER.MaxLength = 40
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnMFGWWYY.MaxLength = 80
            Me.columnPASSYN.MaxLength = 4
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
            Me.columnSERIENOM.MaxLength = 50
            Me.columnFINALJUDGEMENT.MaxLength = 1
            Me.columnAPPROVER.MaxLength = 100
            Me.columnSPEEDTTESTPASSFAIL.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHIGHSPEEDHDRRow() As HIGHSPEEDHDRRow
            Return CType(Me.NewRow,HIGHSPEEDHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HIGHSPEEDHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HIGHSPEEDHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HIGHSPEEDHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDHDRRowChanged(Me, New HIGHSPEEDHDRRowChangeEvent(CType(e.Row,HIGHSPEEDHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HIGHSPEEDHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDHDRRowChanging(Me, New HIGHSPEEDHDRRowChangeEvent(CType(e.Row,HIGHSPEEDHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HIGHSPEEDHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDHDRRowDeleted(Me, New HIGHSPEEDHDRRowChangeEvent(CType(e.Row,HIGHSPEEDHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HIGHSPEEDHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent HIGHSPEEDHDRRowDeleting(Me, New HIGHSPEEDHDRRowChangeEvent(CType(e.Row,HIGHSPEEDHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHIGHSPEEDHDRRow(ByVal row As HIGHSPEEDHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HIGHSPEEDHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MEASUREDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnMEASUREID As Global.System.Data.DataColumn
        
        Private columnSECTIONWIDTH As Global.System.Data.DataColumn
        
        Private columnOVERALLWIDTH As Global.System.Data.DataColumn
        
        Private columnITERATION As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MEASUREDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEASUREIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEASUREID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SECTIONWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECTIONWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OVERALLWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVERALLWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITERATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITERATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MEASUREDTLRow
            Get
                Return CType(Me.Rows(index),MEASUREDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREDTLRowChanging As MEASUREDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREDTLRowChanged As MEASUREDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREDTLRowDeleting As MEASUREDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREDTLRowDeleted As MEASUREDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMEASUREDTLRow(ByVal row As MEASUREDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMEASUREDTLRow(ByVal parentMEASUREHDRRowByMEASUREHDR_MEASUREDTL As MEASUREHDRRow, ByVal SECTIONWIDTH As Decimal, ByVal OVERALLWIDTH As Decimal, ByVal ITERATION As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As MEASUREDTLRow
            Dim rowMEASUREDTLRow As MEASUREDTLRow = CType(Me.NewRow,MEASUREDTLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SECTIONWIDTH, OVERALLWIDTH, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentMEASUREHDRRowByMEASUREHDR_MEASUREDTL) Is Nothing) Then
                columnValuesArray(0) = parentMEASUREHDRRowByMEASUREHDR_MEASUREDTL(0)
            End If
            rowMEASUREDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMEASUREDTLRow)
            Return rowMEASUREDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MEASUREDTLDataTable = CType(MyBase.Clone,MEASUREDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MEASUREDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMEASUREID = MyBase.Columns("MEASUREID")
            Me.columnSECTIONWIDTH = MyBase.Columns("SECTIONWIDTH")
            Me.columnOVERALLWIDTH = MyBase.Columns("OVERALLWIDTH")
            Me.columnITERATION = MyBase.Columns("ITERATION")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMEASUREID = New Global.System.Data.DataColumn("MEASUREID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEASUREID)
            Me.columnSECTIONWIDTH = New Global.System.Data.DataColumn("SECTIONWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECTIONWIDTH)
            Me.columnOVERALLWIDTH = New Global.System.Data.DataColumn("OVERALLWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVERALLWIDTH)
            Me.columnITERATION = New Global.System.Data.DataColumn("ITERATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITERATION)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnMEASUREID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMEASUREDTLRow() As MEASUREDTLRow
            Return CType(Me.NewRow,MEASUREDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MEASUREDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MEASUREDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MEASUREDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent MEASUREDTLRowChanged(Me, New MEASUREDTLRowChangeEvent(CType(e.Row,MEASUREDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MEASUREDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent MEASUREDTLRowChanging(Me, New MEASUREDTLRowChangeEvent(CType(e.Row,MEASUREDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MEASUREDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent MEASUREDTLRowDeleted(Me, New MEASUREDTLRowChangeEvent(CType(e.Row,MEASUREDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MEASUREDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent MEASUREDTLRowDeleting(Me, New MEASUREDTLRowChangeEvent(CType(e.Row,MEASUREDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMEASUREDTLRow(ByVal row As MEASUREDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MEASUREDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MEASUREHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnMEASUREID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnMOLDDESIGN As Global.System.Data.DataColumn
        
        Private columnRIMWIDTH As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnDIAMETER As Global.System.Data.DataColumn
        
        Private columnAVGSECTIONWIDTH As Global.System.Data.DataColumn
        
        Private columnAVGOVERALLWIDTH As Global.System.Data.DataColumn
        
        Private columnMAXOVERALLWIDTH As Global.System.Data.DataColumn
        
        Private columnSIZEFACTOR As Global.System.Data.DataColumn
        
        Private columnMOUNTTIME As Global.System.Data.DataColumn
        
        Private columnMOUNTTEMP As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnENDTIME As Global.System.Data.DataColumn
        
        Private columnACTSIZEFACTOR As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnSTARTINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnENDINFLATIONPRESSURE As Global.System.Data.DataColumn
        
        Private columnADJUSTMENT As Global.System.Data.DataColumn
        
        Private columnCIRCUNFERENCE As Global.System.Data.DataColumn
        
        Private columnNOMINALDIAMETER As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTH As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTHPASSFAIL As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTHDIFERENCE As Global.System.Data.DataColumn
        
        Private columnNOMINALWIDTHTOLERANCE As Global.System.Data.DataColumn
        
        Private columnMAXOVERALLDIAMETER As Global.System.Data.DataColumn
        
        Private columnMINOVERALLDIAMETER As Global.System.Data.DataColumn
        
        Private columnOVERALLWIDTHPASSFAIL As Global.System.Data.DataColumn
        
        Private columnOVERALLDIAMETERPASSFAIL As Global.System.Data.DataColumn
        
        Private columnDIAMETERDIFERENCE As Global.System.Data.DataColumn
        
        Private columnDIAMETERTOLERANCE As Global.System.Data.DataColumn
        
        Private columnTEMPRESISTANCEGRADING As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHT1 As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHT2 As Global.System.Data.DataColumn
        
        Private columnELONGATION1 As Global.System.Data.DataColumn
        
        Private columnELONGATION2 As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHTAFTERAGE1 As Global.System.Data.DataColumn
        
        Private columnTENSILESTRENGHTAFTERAGE2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MEASUREHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEASUREIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEASUREID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOLDDESIGNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOLDDESIGN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIMWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIMWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AVGSECTIONWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVGSECTIONWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AVGOVERALLWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVGOVERALLWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXOVERALLWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXOVERALLWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIZEFACTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZEFACTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOUNTTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOUNTTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOUNTTEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOUNTTEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTSIZEFACTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTSIZEFACTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STARTINFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTARTINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENDINFLATIONPRESSUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDINFLATIONPRESSURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADJUSTMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUSTMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIRCUNFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCUNFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTHPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTHDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINALWIDTHTOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINALWIDTHTOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAXOVERALLDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXOVERALLDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MINOVERALLDIAMETERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINOVERALLDIAMETER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OVERALLWIDTHPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVERALLWIDTHPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OVERALLDIAMETERPASSFAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOVERALLDIAMETERPASSFAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERDIFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERDIFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAMETERTOLERANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAMETERTOLERANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TEMPRESISTANCEGRADINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEMPRESISTANCEGRADING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELONGATION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnELONGATION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELONGATION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnELONGATION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHTAFTERAGE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHTAFTERAGE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENSILESTRENGHTAFTERAGE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTENSILESTRENGHTAFTERAGE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MEASUREHDRRow
            Get
                Return CType(Me.Rows(index),MEASUREHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREHDRRowChanging As MEASUREHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREHDRRowChanged As MEASUREHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREHDRRowDeleting As MEASUREHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEASUREHDRRowDeleted As MEASUREHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMEASUREHDRRow(ByVal row As MEASUREHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMEASUREHDRRow( _
                    ByVal MEASUREID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal INFLATIONPRESSURE As Decimal,  _
                    ByVal MOLDDESIGN As String,  _
                    ByVal RIMWIDTH As Decimal,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal DIAMETER As Decimal,  _
                    ByVal AVGSECTIONWIDTH As Decimal,  _
                    ByVal AVGOVERALLWIDTH As Decimal,  _
                    ByVal MAXOVERALLWIDTH As Decimal,  _
                    ByVal SIZEFACTOR As Decimal,  _
                    ByVal MOUNTTIME As Date,  _
                    ByVal MOUNTTEMP As Decimal,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal ENDTIME As Date,  _
                    ByVal ACTSIZEFACTOR As Decimal,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal STARTINFLATIONPRESSURE As Decimal,  _
                    ByVal ENDINFLATIONPRESSURE As Decimal,  _
                    ByVal ADJUSTMENT As String,  _
                    ByVal CIRCUNFERENCE As Decimal,  _
                    ByVal NOMINALDIAMETER As Decimal,  _
                    ByVal NOMINALWIDTH As Decimal,  _
                    ByVal NOMINALWIDTHPASSFAIL As String,  _
                    ByVal NOMINALWIDTHDIFERENCE As Decimal,  _
                    ByVal NOMINALWIDTHTOLERANCE As Decimal,  _
                    ByVal MAXOVERALLDIAMETER As Decimal,  _
                    ByVal MINOVERALLDIAMETER As Decimal,  _
                    ByVal OVERALLWIDTHPASSFAIL As String,  _
                    ByVal OVERALLDIAMETERPASSFAIL As String,  _
                    ByVal DIAMETERDIFERENCE As Decimal,  _
                    ByVal DIAMETERTOLERANCE As Decimal,  _
                    ByVal TEMPRESISTANCEGRADING As Decimal,  _
                    ByVal TENSILESTRENGHT1 As Decimal,  _
                    ByVal TENSILESTRENGHT2 As Decimal,  _
                    ByVal ELONGATION1 As Decimal,  _
                    ByVal ELONGATION2 As Decimal,  _
                    ByVal TENSILESTRENGHTAFTERAGE1 As Decimal,  _
                    ByVal TENSILESTRENGHTAFTERAGE2 As Decimal) As MEASUREHDRRow
            Dim rowMEASUREHDRRow As MEASUREHDRRow = CType(Me.NewRow,MEASUREHDRRow)
            Dim columnValuesArray() As Object = New Object() {MEASUREID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, INFLATIONPRESSURE, MOLDDESIGN, RIMWIDTH, DOTSERIALNUMBER, DIAMETER, AVGSECTIONWIDTH, AVGOVERALLWIDTH, MAXOVERALLWIDTH, SIZEFACTOR, MOUNTTIME, MOUNTTEMP, SERIALDATE, ENDTIME, ACTSIZEFACTOR, CERTIFICATIONTYPEID, CERTIFICATENUMBER, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, STARTINFLATIONPRESSURE, ENDINFLATIONPRESSURE, ADJUSTMENT, CIRCUNFERENCE, NOMINALDIAMETER, NOMINALWIDTH, NOMINALWIDTHPASSFAIL, NOMINALWIDTHDIFERENCE, NOMINALWIDTHTOLERANCE, MAXOVERALLDIAMETER, MINOVERALLDIAMETER, OVERALLWIDTHPASSFAIL, OVERALLDIAMETERPASSFAIL, DIAMETERDIFERENCE, DIAMETERTOLERANCE, TEMPRESISTANCEGRADING, TENSILESTRENGHT1, TENSILESTRENGHT2, ELONGATION1, ELONGATION2, TENSILESTRENGHTAFTERAGE1, TENSILESTRENGHTAFTERAGE2}
            rowMEASUREHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMEASUREHDRRow)
            Return rowMEASUREHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByMEASUREID(ByVal MEASUREID As Decimal) As MEASUREHDRRow
            Return CType(Me.Rows.Find(New Object() {MEASUREID}),MEASUREHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MEASUREHDRDataTable = CType(MyBase.Clone,MEASUREHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MEASUREHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMEASUREID = MyBase.Columns("MEASUREID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnINFLATIONPRESSURE = MyBase.Columns("INFLATIONPRESSURE")
            Me.columnMOLDDESIGN = MyBase.Columns("MOLDDESIGN")
            Me.columnRIMWIDTH = MyBase.Columns("RIMWIDTH")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnDIAMETER = MyBase.Columns("DIAMETER")
            Me.columnAVGSECTIONWIDTH = MyBase.Columns("AVGSECTIONWIDTH")
            Me.columnAVGOVERALLWIDTH = MyBase.Columns("AVGOVERALLWIDTH")
            Me.columnMAXOVERALLWIDTH = MyBase.Columns("MAXOVERALLWIDTH")
            Me.columnSIZEFACTOR = MyBase.Columns("SIZEFACTOR")
            Me.columnMOUNTTIME = MyBase.Columns("MOUNTTIME")
            Me.columnMOUNTTEMP = MyBase.Columns("MOUNTTEMP")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnENDTIME = MyBase.Columns("ENDTIME")
            Me.columnACTSIZEFACTOR = MyBase.Columns("ACTSIZEFACTOR")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnSTARTINFLATIONPRESSURE = MyBase.Columns("STARTINFLATIONPRESSURE")
            Me.columnENDINFLATIONPRESSURE = MyBase.Columns("ENDINFLATIONPRESSURE")
            Me.columnADJUSTMENT = MyBase.Columns("ADJUSTMENT")
            Me.columnCIRCUNFERENCE = MyBase.Columns("CIRCUNFERENCE")
            Me.columnNOMINALDIAMETER = MyBase.Columns("NOMINALDIAMETER")
            Me.columnNOMINALWIDTH = MyBase.Columns("NOMINALWIDTH")
            Me.columnNOMINALWIDTHPASSFAIL = MyBase.Columns("NOMINALWIDTHPASSFAIL")
            Me.columnNOMINALWIDTHDIFERENCE = MyBase.Columns("NOMINALWIDTHDIFERENCE")
            Me.columnNOMINALWIDTHTOLERANCE = MyBase.Columns("NOMINALWIDTHTOLERANCE")
            Me.columnMAXOVERALLDIAMETER = MyBase.Columns("MAXOVERALLDIAMETER")
            Me.columnMINOVERALLDIAMETER = MyBase.Columns("MINOVERALLDIAMETER")
            Me.columnOVERALLWIDTHPASSFAIL = MyBase.Columns("OVERALLWIDTHPASSFAIL")
            Me.columnOVERALLDIAMETERPASSFAIL = MyBase.Columns("OVERALLDIAMETERPASSFAIL")
            Me.columnDIAMETERDIFERENCE = MyBase.Columns("DIAMETERDIFERENCE")
            Me.columnDIAMETERTOLERANCE = MyBase.Columns("DIAMETERTOLERANCE")
            Me.columnTEMPRESISTANCEGRADING = MyBase.Columns("TEMPRESISTANCEGRADING")
            Me.columnTENSILESTRENGHT1 = MyBase.Columns("TENSILESTRENGHT1")
            Me.columnTENSILESTRENGHT2 = MyBase.Columns("TENSILESTRENGHT2")
            Me.columnELONGATION1 = MyBase.Columns("ELONGATION1")
            Me.columnELONGATION2 = MyBase.Columns("ELONGATION2")
            Me.columnTENSILESTRENGHTAFTERAGE1 = MyBase.Columns("TENSILESTRENGHTAFTERAGE1")
            Me.columnTENSILESTRENGHTAFTERAGE2 = MyBase.Columns("TENSILESTRENGHTAFTERAGE2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMEASUREID = New Global.System.Data.DataColumn("MEASUREID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEASUREID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnINFLATIONPRESSURE = New Global.System.Data.DataColumn("INFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFLATIONPRESSURE)
            Me.columnMOLDDESIGN = New Global.System.Data.DataColumn("MOLDDESIGN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOLDDESIGN)
            Me.columnRIMWIDTH = New Global.System.Data.DataColumn("RIMWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIMWIDTH)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnDIAMETER = New Global.System.Data.DataColumn("DIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETER)
            Me.columnAVGSECTIONWIDTH = New Global.System.Data.DataColumn("AVGSECTIONWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVGSECTIONWIDTH)
            Me.columnAVGOVERALLWIDTH = New Global.System.Data.DataColumn("AVGOVERALLWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVGOVERALLWIDTH)
            Me.columnMAXOVERALLWIDTH = New Global.System.Data.DataColumn("MAXOVERALLWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXOVERALLWIDTH)
            Me.columnSIZEFACTOR = New Global.System.Data.DataColumn("SIZEFACTOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZEFACTOR)
            Me.columnMOUNTTIME = New Global.System.Data.DataColumn("MOUNTTIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOUNTTIME)
            Me.columnMOUNTTEMP = New Global.System.Data.DataColumn("MOUNTTEMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOUNTTEMP)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnENDTIME = New Global.System.Data.DataColumn("ENDTIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDTIME)
            Me.columnACTSIZEFACTOR = New Global.System.Data.DataColumn("ACTSIZEFACTOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTSIZEFACTOR)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnSTARTINFLATIONPRESSURE = New Global.System.Data.DataColumn("STARTINFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTARTINFLATIONPRESSURE)
            Me.columnENDINFLATIONPRESSURE = New Global.System.Data.DataColumn("ENDINFLATIONPRESSURE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDINFLATIONPRESSURE)
            Me.columnADJUSTMENT = New Global.System.Data.DataColumn("ADJUSTMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUSTMENT)
            Me.columnCIRCUNFERENCE = New Global.System.Data.DataColumn("CIRCUNFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCUNFERENCE)
            Me.columnNOMINALDIAMETER = New Global.System.Data.DataColumn("NOMINALDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALDIAMETER)
            Me.columnNOMINALWIDTH = New Global.System.Data.DataColumn("NOMINALWIDTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTH)
            Me.columnNOMINALWIDTHPASSFAIL = New Global.System.Data.DataColumn("NOMINALWIDTHPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTHPASSFAIL)
            Me.columnNOMINALWIDTHDIFERENCE = New Global.System.Data.DataColumn("NOMINALWIDTHDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTHDIFERENCE)
            Me.columnNOMINALWIDTHTOLERANCE = New Global.System.Data.DataColumn("NOMINALWIDTHTOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINALWIDTHTOLERANCE)
            Me.columnMAXOVERALLDIAMETER = New Global.System.Data.DataColumn("MAXOVERALLDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXOVERALLDIAMETER)
            Me.columnMINOVERALLDIAMETER = New Global.System.Data.DataColumn("MINOVERALLDIAMETER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINOVERALLDIAMETER)
            Me.columnOVERALLWIDTHPASSFAIL = New Global.System.Data.DataColumn("OVERALLWIDTHPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVERALLWIDTHPASSFAIL)
            Me.columnOVERALLDIAMETERPASSFAIL = New Global.System.Data.DataColumn("OVERALLDIAMETERPASSFAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOVERALLDIAMETERPASSFAIL)
            Me.columnDIAMETERDIFERENCE = New Global.System.Data.DataColumn("DIAMETERDIFERENCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERDIFERENCE)
            Me.columnDIAMETERTOLERANCE = New Global.System.Data.DataColumn("DIAMETERTOLERANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAMETERTOLERANCE)
            Me.columnTEMPRESISTANCEGRADING = New Global.System.Data.DataColumn("TEMPRESISTANCEGRADING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEMPRESISTANCEGRADING)
            Me.columnTENSILESTRENGHT1 = New Global.System.Data.DataColumn("TENSILESTRENGHT1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHT1)
            Me.columnTENSILESTRENGHT2 = New Global.System.Data.DataColumn("TENSILESTRENGHT2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHT2)
            Me.columnELONGATION1 = New Global.System.Data.DataColumn("ELONGATION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELONGATION1)
            Me.columnELONGATION2 = New Global.System.Data.DataColumn("ELONGATION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELONGATION2)
            Me.columnTENSILESTRENGHTAFTERAGE1 = New Global.System.Data.DataColumn("TENSILESTRENGHTAFTERAGE1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHTAFTERAGE1)
            Me.columnTENSILESTRENGHTAFTERAGE2 = New Global.System.Data.DataColumn("TENSILESTRENGHTAFTERAGE2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTENSILESTRENGHTAFTERAGE2)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMEASUREID}, true))
            Me.columnMEASUREID.AllowDBNull = false
            Me.columnMEASUREID.Unique = true
            Me.columnPROJECTNUMBER.AllowDBNull = false
            Me.columnPROJECTNUMBER.MaxLength = 40
            Me.columnTIRENUMBER.AllowDBNull = false
            Me.columnTESTSPEC.AllowDBNull = false
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnMOLDDESIGN.MaxLength = 80
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
            Me.columnADJUSTMENT.MaxLength = 50
            Me.columnNOMINALWIDTHPASSFAIL.MaxLength = 1
            Me.columnOVERALLWIDTHPASSFAIL.MaxLength = 1
            Me.columnOVERALLDIAMETERPASSFAIL.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMEASUREHDRRow() As MEASUREHDRRow
            Return CType(Me.NewRow,MEASUREHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MEASUREHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MEASUREHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MEASUREHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent MEASUREHDRRowChanged(Me, New MEASUREHDRRowChangeEvent(CType(e.Row,MEASUREHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MEASUREHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent MEASUREHDRRowChanging(Me, New MEASUREHDRRowChangeEvent(CType(e.Row,MEASUREHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MEASUREHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent MEASUREHDRRowDeleted(Me, New MEASUREHDRRowChangeEvent(CType(e.Row,MEASUREHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MEASUREHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent MEASUREHDRRowDeleting(Me, New MEASUREHDRRowChangeEvent(CType(e.Row,MEASUREHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMEASUREHDRRow(ByVal row As MEASUREHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MEASUREHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PLUNGERDTLDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnPLUNGERID As Global.System.Data.DataColumn
        
        Private columnBREAKINGENERGY As Global.System.Data.DataColumn
        
        Private columnITERATION As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PLUNGERDTL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUNGERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUNGERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BREAKINGENERGYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBREAKINGENERGY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ITERATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITERATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PLUNGERDTLRow
            Get
                Return CType(Me.Rows(index),PLUNGERDTLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERDTLRowChanging As PLUNGERDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERDTLRowChanged As PLUNGERDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERDTLRowDeleting As PLUNGERDTLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERDTLRowDeleted As PLUNGERDTLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPLUNGERDTLRow(ByVal row As PLUNGERDTLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPLUNGERDTLRow(ByVal parentPLUNGERHDRRowByPLUNGERDTL_PLUNGERHDR As PLUNGERHDRRow, ByVal BREAKINGENERGY As Decimal, ByVal ITERATION As Decimal, ByVal CREATEDBY As String, ByVal CREATEDON As Date, ByVal MODIFIEDBY As String, ByVal MODIFIEDON As Date) As PLUNGERDTLRow
            Dim rowPLUNGERDTLRow As PLUNGERDTLRow = CType(Me.NewRow,PLUNGERDTLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, BREAKINGENERGY, ITERATION, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON}
            If (Not (parentPLUNGERHDRRowByPLUNGERDTL_PLUNGERHDR) Is Nothing) Then
                columnValuesArray(0) = parentPLUNGERHDRRowByPLUNGERDTL_PLUNGERHDR(0)
            End If
            rowPLUNGERDTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPLUNGERDTLRow)
            Return rowPLUNGERDTLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PLUNGERDTLDataTable = CType(MyBase.Clone,PLUNGERDTLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PLUNGERDTLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPLUNGERID = MyBase.Columns("PLUNGERID")
            Me.columnBREAKINGENERGY = MyBase.Columns("BREAKINGENERGY")
            Me.columnITERATION = MyBase.Columns("ITERATION")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPLUNGERID = New Global.System.Data.DataColumn("PLUNGERID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUNGERID)
            Me.columnBREAKINGENERGY = New Global.System.Data.DataColumn("BREAKINGENERGY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBREAKINGENERGY)
            Me.columnITERATION = New Global.System.Data.DataColumn("ITERATION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITERATION)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.columnPLUNGERID.AllowDBNull = false
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnCREATEDBY.MaxLength = 200
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPLUNGERDTLRow() As PLUNGERDTLRow
            Return CType(Me.NewRow,PLUNGERDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PLUNGERDTLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PLUNGERDTLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PLUNGERDTLRowChangedEvent) Is Nothing) Then
                RaiseEvent PLUNGERDTLRowChanged(Me, New PLUNGERDTLRowChangeEvent(CType(e.Row,PLUNGERDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PLUNGERDTLRowChangingEvent) Is Nothing) Then
                RaiseEvent PLUNGERDTLRowChanging(Me, New PLUNGERDTLRowChangeEvent(CType(e.Row,PLUNGERDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PLUNGERDTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent PLUNGERDTLRowDeleted(Me, New PLUNGERDTLRowChangeEvent(CType(e.Row,PLUNGERDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PLUNGERDTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent PLUNGERDTLRowDeleting(Me, New PLUNGERDTLRowChangeEvent(CType(e.Row,PLUNGERDTLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePLUNGERDTLRow(ByVal row As PLUNGERDTLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PLUNGERDTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PLUNGERHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnPLUNGERID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnAVGBREAKINGENERGY As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnMINPLUNGER As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PLUNGERHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUNGERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUNGERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AVGBREAKINGENERGYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVGBREAKINGENERGY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MINPLUNGERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINPLUNGER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PLUNGERHDRRow
            Get
                Return CType(Me.Rows(index),PLUNGERHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERHDRRowChanging As PLUNGERHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERHDRRowChanged As PLUNGERHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERHDRRowDeleting As PLUNGERHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLUNGERHDRRowDeleted As PLUNGERHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPLUNGERHDRRow(ByVal row As PLUNGERHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPLUNGERHDRRow( _
                    ByVal PLUNGERID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal AVGBREAKINGENERGY As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal MINPLUNGER As Decimal,  _
                    ByVal CREATEDON As String,  _
                    ByVal CREATEDBY As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date) As PLUNGERHDRRow
            Dim rowPLUNGERHDRRow As PLUNGERHDRRow = CType(Me.NewRow,PLUNGERHDRRow)
            Dim columnValuesArray() As Object = New Object() {PLUNGERID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIALNUMBER, AVGBREAKINGENERGY, PASSYN, CERTIFICATIONTYPEID, CERTIFICATENUMBER, SERIALDATE, MINPLUNGER, CREATEDON, CREATEDBY, MODIFIEDBY, MODIFIEDON}
            rowPLUNGERHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPLUNGERHDRRow)
            Return rowPLUNGERHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByPLUNGERID(ByVal PLUNGERID As Decimal) As PLUNGERHDRRow
            Return CType(Me.Rows.Find(New Object() {PLUNGERID}),PLUNGERHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PLUNGERHDRDataTable = CType(MyBase.Clone,PLUNGERHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PLUNGERHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPLUNGERID = MyBase.Columns("PLUNGERID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnAVGBREAKINGENERGY = MyBase.Columns("AVGBREAKINGENERGY")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnMINPLUNGER = MyBase.Columns("MINPLUNGER")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPLUNGERID = New Global.System.Data.DataColumn("PLUNGERID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUNGERID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnAVGBREAKINGENERGY = New Global.System.Data.DataColumn("AVGBREAKINGENERGY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVGBREAKINGENERGY)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSYN)
            Me.columnCERTIFICATIONTYPEID = New Global.System.Data.DataColumn("CERTIFICATIONTYPEID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATIONTYPEID)
            Me.columnCERTIFICATENUMBER = New Global.System.Data.DataColumn("CERTIFICATENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERTIFICATENUMBER)
            Me.columnSERIALDATE = New Global.System.Data.DataColumn("SERIALDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIALDATE)
            Me.columnMINPLUNGER = New Global.System.Data.DataColumn("MINPLUNGER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINPLUNGER)
            Me.columnCREATEDON = New Global.System.Data.DataColumn("CREATEDON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDON)
            Me.columnCREATEDBY = New Global.System.Data.DataColumn("CREATEDBY", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATEDBY)
            Me.columnMODIFIEDBY = New Global.System.Data.DataColumn("MODIFIEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDBY)
            Me.columnMODIFIEDON = New Global.System.Data.DataColumn("MODIFIEDON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODIFIEDON)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPLUNGERID}, true))
            Me.columnPLUNGERID.AllowDBNull = false
            Me.columnPLUNGERID.Unique = true
            Me.columnPROJECTNUMBER.MaxLength = 10
            Me.columnTESTSPEC.MaxLength = 40
            Me.columnDOTSERIALNUMBER.MaxLength = 80
            Me.columnPASSYN.MaxLength = 4
            Me.columnCERTIFICATIONTYPEID.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.AllowDBNull = false
            Me.columnCERTIFICATENUMBER.MaxLength = 80
            Me.columnCREATEDON.AllowDBNull = false
            Me.columnCREATEDON.MaxLength = 200
            Me.columnCREATEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.AllowDBNull = false
            Me.columnMODIFIEDBY.MaxLength = 200
            Me.columnMODIFIEDON.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPLUNGERHDRRow() As PLUNGERHDRRow
            Return CType(Me.NewRow,PLUNGERHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PLUNGERHDRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PLUNGERHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PLUNGERHDRRowChangedEvent) Is Nothing) Then
                RaiseEvent PLUNGERHDRRowChanged(Me, New PLUNGERHDRRowChangeEvent(CType(e.Row,PLUNGERHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PLUNGERHDRRowChangingEvent) Is Nothing) Then
                RaiseEvent PLUNGERHDRRowChanging(Me, New PLUNGERHDRRowChangeEvent(CType(e.Row,PLUNGERHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PLUNGERHDRRowDeletedEvent) Is Nothing) Then
                RaiseEvent PLUNGERHDRRowDeleted(Me, New PLUNGERHDRRowChangeEvent(CType(e.Row,PLUNGERHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PLUNGERHDRRowDeletingEvent) Is Nothing) Then
                RaiseEvent PLUNGERHDRRowDeleting(Me, New PLUNGERHDRRowChangeEvent(CType(e.Row,PLUNGERHDRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePLUNGERHDRRow(ByVal row As PLUNGERHDRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EmarkPassengerWithTR = New EmarkPassengerWithTR()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PLUNGERHDRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TREADWEARHDRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTREADWEARID As Global.System.Data.DataColumn
        
        Private columnPROJECTNUMBER As Global.System.Data.DataColumn
        
        Private columnTIRENUMBER As Global.System.Data.DataColumn
        
        Private columnTESTSPEC As Global.System.Data.DataColumn
        
        Private columnCOMPLETIONDATE As Global.System.Data.DataColumn
        
        Private columnDOTSERIALNUMBER As Global.System.Data.DataColumn
        
        Private columnLOWESTWEARBAR As Global.System.Data.DataColumn
        
        Private columnPASSYN As Global.System.Data.DataColumn
        
        Private columnSERIALDATE As Global.System.Data.DataColumn
        
        Private columnCERTIFICATIONTYPEID As Global.System.Data.DataColumn
        
        Private columnCERTIFICATENUMBER As Global.System.Data.DataColumn
        
        Private columnCREATEDBY As Global.System.Data.DataColumn
        
        Private columnCREATEDON As Global.System.Data.DataColumn
        
        Private columnMODIFIEDBY As Global.System.Data.DataColumn
        
        Private columnMODIFIEDON As Global.System.Data.DataColumn
        
        Private columnINDICATORSREQUIREMENT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TREADWEARHDR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TREADWEARIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTREADWEARID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROJECTNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJECTNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIRENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIRENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TESTSPECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTSPEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPLETIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLETIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTSERIALNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTSERIALNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOWESTWEARBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOWESTWEARBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSYNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSYN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERIALDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIALDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATIONTYPEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATIONTYPEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERTIFICATENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERTIFICATENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODIFIEDONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODIFIEDON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDICATORSREQUIREMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICATORSREQUIREMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TREADWEARHDRRow
            Get
                Return CType(Me.Rows(index),TREADWEARHDRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARHDRRowChanging As TREADWEARHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARHDRRowChanged As TREADWEARHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARHDRRowDeleting As TREADWEARHDRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TREADWEARHDRRowDeleted As TREADWEARHDRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTREADWEARHDRRow(ByVal row As TREADWEARHDRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTREADWEARHDRRow( _
                    ByVal TREADWEARID As Decimal,  _
                    ByVal PROJECTNUMBER As String,  _
                    ByVal TIRENUMBER As Decimal,  _
                    ByVal TESTSPEC As String,  _
                    ByVal COMPLETIONDATE As Date,  _
                    ByVal DOTSERIALNUMBER As String,  _
                    ByVal LOWESTWEARBAR As Decimal,  _
                    ByVal PASSYN As String,  _
                    ByVal SERIALDATE As Date,  _
                    ByVal CERTIFICATIONTYPEID As Decimal,  _
                    ByVal CERTIFICATENUMBER As String,  _
                    ByVal CREATEDBY As String,  _
                    ByVal CREATEDON As Date,  _
                    ByVal MODIFIEDBY As String,  _
                    ByVal MODIFIEDON As Date,  _
                    ByVal INDICATORSREQUIREMENT As Decimal) As TREADWEARHDRRow
            Dim rowTREADWEARHDRRow As TREADWEARHDRRow = CType(Me.NewRow,TREADWEARHDRRow)
            Dim columnValuesArray() As Object = New Object() {TREADWEARID, PROJECTNUMBER, TIRENUMBER, TESTSPEC, COMPLETIONDATE, DOTSERIALNUMBER, LOWESTWEARBAR, PASSYN, SERIALDATE, CERTIFICATIONTYPEID, CERTIFICATENUMBER, CREATEDBY, CREATEDON, MODIFIEDBY, MODIFIEDON, INDICATORSREQUIREMENT}
            rowTREADWEARHDRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTREADWEARHDRRow)
            Return rowTREADWEARHDRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByTREADWEARID(ByVal TREADWEARID As Decimal) As TREADWEARHDRRow
            Return CType(Me.Rows.Find(New Object() {TREADWEARID}),TREADWEARHDRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TREADWEARHDRDataTable = CType(MyBase.Clone,TREADWEARHDRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TREADWEARHDRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTREADWEARID = MyBase.Columns("TREADWEARID")
            Me.columnPROJECTNUMBER = MyBase.Columns("PROJECTNUMBER")
            Me.columnTIRENUMBER = MyBase.Columns("TIRENUMBER")
            Me.columnTESTSPEC = MyBase.Columns("TESTSPEC")
            Me.columnCOMPLETIONDATE = MyBase.Columns("COMPLETIONDATE")
            Me.columnDOTSERIALNUMBER = MyBase.Columns("DOTSERIALNUMBER")
            Me.columnLOWESTWEARBAR = MyBase.Columns("LOWESTWEARBAR")
            Me.columnPASSYN = MyBase.Columns("PASSYN")
            Me.columnSERIALDATE = MyBase.Columns("SERIALDATE")
            Me.columnCERTIFICATIONTYPEID = MyBase.Columns("CERTIFICATIONTYPEID")
            Me.columnCERTIFICATENUMBER = MyBase.Columns("CERTIFICATENUMBER")
            Me.columnCREATEDBY = MyBase.Columns("CREATEDBY")
            Me.columnCREATEDON = MyBase.Columns("CREATEDON")
            Me.columnMODIFIEDBY = MyBase.Columns("MODIFIEDBY")
            Me.columnMODIFIEDON = MyBase.Columns("MODIFIEDON")
            Me.columnINDICATORSREQUIREMENT = MyBase.Columns("INDICATORSREQUIREMENT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTREADWEARID = New Global.System.Data.DataColumn("TREADWEARID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTREADWEARID)
            Me.columnPROJECTNUMBER = New Global.System.Data.DataColumn("PROJECTNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJECTNUMBER)
            Me.columnTIRENUMBER = New Global.System.Data.DataColumn("TIRENUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIRENUMBER)
            Me.columnTESTSPEC = New Global.System.Data.DataColumn("TESTSPEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTSPEC)
            Me.columnCOMPLETIONDATE = New Global.System.Data.DataColumn("COMPLETIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLETIONDATE)
            Me.columnDOTSERIALNUMBER = New Global.System.Data.DataColumn("DOTSERIALNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTSERIALNUMBER)
            Me.columnLOWESTWEARBAR = New Global.System.Data.DataColumn("LOWESTWEARBAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOWESTWEARBAR)
            Me.columnPASSYN = New Global.System.Data.DataColumn("PASSYN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      